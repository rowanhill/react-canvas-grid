{"version":3,"sources":["../../dist/index.js","../../dist/gridGeometry.js","../../dist/selectionState/selectionState.js","../../dist/selectionState/selectionStateFactory.js","../../dist/scrollbarGeometry.js","../../dist/selectionState/cellsSelection.js","../../dist/selectionState/noSelection.js","../../dist/GridCanvas.js","../../dist/utils.js","../../dist/types.js","../../dist/eventHandlers/mouseEvents.js","../../dist/eventHandlers/scrolling.js","../../dist/commonCanvasRenderer.js","../../dist/gridState.js","../../dist/highlightCanvasRenderer.js","../../dist/ReactCanvasGrid.js","../../dist/eventHandlers/keyboardEvents.js","../../dist/eventHandlers/autofillMouseEvents.js","../../dist/selectionState/focusOffset.js","../../dist/selectionState/allGridSelection.js","../../dist/selectionState/colsSelection.js","../../dist/selectionState/rowsSelection.js","../../dist/eventHandlers/gridMouseEvents.js","../../dist/eventHandlers/mouseCellAndRegionCalc.js","../../dist/eventHandlers/scrollingTimer.js","../../dist/eventHandlers/scrollbarMouseEvents.js","../../dist/FrozenCanvas.js","../../dist/FrozenColsCanvas.js","../../dist/gridCanvasRenderer.js","../../dist/FrozenCornerCanvas.js","../../dist/FrozenRowsCanvas.js","../../dist/HighlightCanvas.js","../../dist/InlineEditor.js","../../dist/MainCanvas.js","../../dist/autofill.js","components/ControlsForm.tsx","components/FixedSizeHolder.tsx","components/PaddedPage.tsx","data/dataAndColumns.ts","examples/Autofill.tsx","examples/CustomBackground.tsx","examples/CustomText.tsx","examples/DynamicData.tsx","examples/Editable.tsx","components/EventLog.tsx","examples/EditEvents.tsx","examples/Everything.tsx","examples/FocusColumn.tsx","examples/KeyboardEvents.tsx","examples/SelectionEvents.tsx","examples/exampleMeta.tsx","examples/SmallGrid.tsx","examples/Simple.tsx","examples/FrozenCells.tsx","examples/Index.tsx","App.tsx","index.tsx"],"names":["Object","defineProperty","exports","value","ReactCanvasGrid_1","require","ReactCanvasGrid","types_1","getCellText","cellHasTextFunction","cellIsEditable","autofill_1","repeatSelectionIntoFill","__assign","this","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","scrollbarGeometry_1","GridGeometry","calculateColumnBoundaries","columns","borderWidth","curLeft","map","col","boundary","left","right","width","calculateGridSize","data","columnBoundaries","rowHeight","numRows","height","calculateGridPlusGutterSize","gridSize","rootSize","barWidth","barMarginToEdge","calculateCanvasSize","gridPlusGutterSize","Math","min","calculateFrozenRowsHeight","frozenRows","calculateFrozenColsWidth","frozenCols","rightmostColIndex","calculateGridCellCoordsFromGridState","event","rootRef","gridState","calculateGridCellCoords","gridOffset","maxRow","root","Error","gridPixelToGridCell","windowPixelToGridPixel","x","clientX","y","clientY","calculateGridPixelCoords","calculateCellBounds","colIndex","rowIndex","cellLeft","cellRight","top","bottom","calculateGridOffsetFromFraction","fraction","gridLength","canvasLength","floor","truncateGridOffset","oldOffset","canvasSize","maxX","maxY","quantiseGridOffset","offset","dpr","calculateGridOffsetForTargetColumn","frozenColsWidth","targetColIndex","verticalScrollGutter","calculateGridOffsetXForTargetColumn","calculateGridOffsetForTargetRow","frozenRowsHeight","targetRowIndex","horizontalScrollGutter","calculateGridOffsetYForTargetRow","calculateGridOffsetForTargetCell","targetCell","oldX","gutterWidth","targetBoundaries","viewLeft","viewRight","max","oldY","gutterHeight","targetRowTop","targetRowBottom","viewTop","viewBottom","calculateVisibleRect","isWindowPixelWithinComponent","rootClientRect","getBoundingClientRect","calculateComponentPixel","windowPixelToComponentPixel","_a","BaseSelectionState","isSelectionInProgress","allGridSelection_1","cellsSelection_1","colsSelection_1","rowsSelection_1","createSelectionStateForMouseDown","cell","meta","region","CellsSelection","RowsSelection","ColsSelection","AllGridSelection","barCapMargin","calculateLength","frozenLength","availableLength","contentRatio","round","calculateExtent","barLength","scrollFraction","scrollableCanvasLength","start","end","calculateTransversePosition","canvasTransverse","getHorizontalScrollbarLength","getVerticalScrollbarLength","getHorizontalScrollbarExtent","horizontalBarLength","getVerticalScrollbarExtent","verticalBarLength","getHorizontalScrollbarPos","extent","transverse","getVerticalScrollbarPos","getVerticalGutterBounds","getHorizontalGutterBounds","calculateFractionFromStartPos","getHitScrollBar","coord","horizontalPosition","verticalPosition","halfBarHeight","hTop","hBottom","hExtent","vLeft","vRight","vExtent","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","__","constructor","create","utils_1","focusOffset_1","selectionState_1","selectionStateFactory_1","createSingleCell","_super","editCursorCell","selection","focusCell","autofillDragCell","_this","arrowUp","cellBounds","truncateCoord","arrowDown","arrowLeft","arrowRight","shiftArrowUp","newY","truncateY","bounds","shiftArrowDown","shiftArrowLeft","newX","truncateX","shiftArrowRight","mouseDown","shiftMouseDown","selectionBoundsTo","mouseMove","equalCoord","equalBounds","mouseUp","fillRange","getAutofillRange","mergedRange","mergeBounds","mouseDownOnAutofillHandle","getSelectionRange","topLeft","bottomRight","getFocusGridOffset","getCursorCell","isAutofillDragging","selRange","numCols","a","NoSelection","_","__importStar","mod","__esModule","result","k","instigator_1","React","gridCanvasRenderer_1","GridCanvas","canvasRef","createRef","renderer","renderCallback","render","createElement","ref","props","style","position","componentDidMount","current","basicProps","mergeTransformer","colBoundaries","gridInnerSize","GridCanvasRenderer","consumer","posProps","newBasicProps","newPosProps","updateProps","componentWillUnmount","deregister","Component","numberBetween","num","equalSelectRange","getText","text","editor","autofillMouseEvents_1","gridMouseEvents_1","scrollbarMouseEvents_1","scrolling_1","isLeftButton","buttons","handleWheel","e","scaleFactor","0","1","deltaMode","updateOffsetByDelta","deltaX","deltaY","preventDefault","handleMouseDown","editingCell","mouseDownOnScrollbar","mouseDownOnGrid","handleMouseMove","mouseDragOnScrollbar","mouseDragOnGrid","mouseHoverOnAutofillHandle","mouseHoverOnScrollbar","handleMouseUp","mouseUpOnScrollbar","mouseUpOnGrid","gridOffsetRaw","borderColour","CommonCanvasRenderer","canvas","alpha","queuedRender","setCanvas","context","getContext","drawCellBackgroundDefault","fillStyle","fillRect","drawCellTextDefault","textBaseline","verticalCentre","fillText","drawScaled","draw","window","requestAnimationFrame","scale","drawCell","metadata","renderBackground","renderText","__importDefault","shallow_equals_1","gridGeometry_1","ScrollbarGeometry","noSelection_1","refEquals","shallowEqualsExceptFunctions","default","GridState","shouldAllowAutofill","activeSource","devicePixelRatio","selectionState","hoveredScrollbar","autofillHandleIsHovered","transformer","c","fr","fc","visibleRect","horizontalScrollbarLength","verticalScrollbarLength","horizontalScrollbarExtent","verticalScrollbarExtent","horizontalScrollbarPos","verticalScrollbarPos","horizontalGutterBounds","verticalGutterBounds","cursorType","h","commonCanvasRenderer_1","ScrollGeometry","defaultPosProps","defaultScrollbarProps","defaultHoverProps","colours","veryLight","light","veryTransparent","transparent","mediumTransparent","medium","styles","scrollbar","defaultFill","hoverFill","scrollGutters","fill","stroke","selectedCells","autofillCells","autofillHandle","HighlightCanvasRenderer","scrollProps","hoverProps","selectionProps","clearRect","translate","lineCap","strokeStyle","lineWidth","rect","gridCellCoordToGridPixelCoord","strokeRect","selectionRange","tl","br","isSelectionMoreThanOneCell","autofillRange","topLeftRect","bottomRightRect","setLineDash","vBounds","hBounds","beginPath","moveTo","lineTo","scrollPos","selectProps","shouldSelectionClear","prev","next","keyboardEvents_1","mouseEvents_1","FrozenCanvas_1","gridState_1","HighlightCanvas_1","highlightCanvasRenderer_1","InlineEditor_1","MainCanvas_1","onWheel","onMouseDown","state","onMouseMove","onMouseUp","batch","onDoubleClick","cellCoords","startEditingCell","onKeyDown","keyDownOnGrid","fieldName","setState","cancelEditingCell","focusRoot","stopEditingCell","newData","onCellDataChanged","focus","preventScroll","rootRect","addEventListener","componentDidUpdate","prevProps","onSelectionCleared","truncatedOffset","focusedColIndex","focusedOffset","removeEventListener","className","tabIndex","cssWidth","cssHeight","overflow","outline","cursor","MainCanvas","HighlightCanvas","InlineTextEditor","onSubmit","onCancel","FrozenCanvas","defaultProps","PureComponent","selectionArrowActions","ArrowRight","shift","noShift","ArrowLeft","ArrowUp","ArrowDown","key","selectionArrowAction","shiftKey","newSelState","newOffset","oldSelectionRange","onStartOrUpdate","onSelectionChangeUpdate","onSelectionChangeStart","onSelectionChangeEnd","isOverAutofillHandle","bottomRightCellBounds","gridPixelCoord","dx","dy","abs","selectionStartColIndex","selectionCursorColIndex","focusColIndex","newCell","truncateCol","newColIndex","neColIndex","selectionStartRowIndex","selectionCursorRowIndex","focusRowIndex","truncateRow","newRowIndex","mouseCellAndRegionCalc_1","scrollingTimer_1","componentPixelCoord","getMouseCellCoordAndRegion","truncatedCoord","process","callback","recalculateAndUpdateSelection","startScrollBySelectionDragIfNeeded","clearScrollByDragTimer","rangeToFill","onAutofill","gridCoords","clickInFrozenCols","clickInFrozenRows","scrollBySelectionDragTimerId","clearInterval","updateSelection","options","suppressX","suppressY","setInterval","draggedScrollbar","hitScrollbar","bar","origScrollbarStart","origClick","values","frozenLen","canvasLen","gridLen","barLen","clickCoord","dragDistance","desiredStart","desiredFraction","FrozenColsCanvas_1","FrozenCornerCanvas_1","FrozenRowsCanvas_1","Fragment","FrozenCornerCanvas","FrozenRowsCanvas","FrozenColsCanvas","GridCanvas_1","colsVisibleRect","scrollGutterHeight","colsPosProps","prevDraw","xDiff","yDiff","shiftExistingCanvas","drawNewBorderBackground","drawWholeBorderBackground","translateToGridOffset","minRowIndex","maxRowIndex","ceil","_i","_b","column","translateToOrigin","propsWidth","propsHeight","drawImage","top_1","cornerVisibleRect","cornerPosProps","rowsVisibleRect","scrollGutterWidth","rowsPosProps","newScrollProps","newHoverProps","newSelectionProps","defaultText","serialise","submit","inputValue","currentTarget","deserialise","type","boxSizing","border","autoFocus","defaultValue","onBlur","onKeyPress","onKeyUp","keyCode","mainVisibleRect","selectRange","cloneCellDef","selHeight","selWidth","row","reduce","acc","srcRowIndex","srcColIndex","srcColDef","srcCellDef","destRowIndex","destColIndex","destColDef","destCellDef","ControlsForm","children","InlineGroup","NumberInput","RadioInputs","selectedValue","onSelect","val","toString","checked","onChange","FixedSizeHolder","PaddedPage","createFakeDataAndColumns","dataGen","createFakeColumns","rows","createFakeData","cols","push","j","hash","getRandomTextA","substr","getRandomTextB","AutofillableGrid","showAllowAutofillMethods","autofillCell","onAutofillModeSelect","autofillMode","getTextPair","none","single","multi","renderBackgroundLightGreen","renderTextRed","DynamicDataGrid","changeColsDebounceTimeout","changeRowsDebounceTimeout","changeNumRows","clearTimeout","target","valueAsNumber","setTimeout","changeNumRowsDebounced","changeNumCols","changeNumColsDebounced","moveFirstColumnToEnd","slice","modifyTopLeftCell","firstColName","reset","getDefaultState","id","onClick","EditableDataGrid","match","parseInt","EventLog","logRef","log","readOnly","scrollTop","scrollHeight","EditEventsGrid","eventLog","to","labels","colour","highlights","renderHeaderBackground","renderCellBackground","highlight","bgColour","closePath","getCustomCellText","shouldReverseText","split","reverse","join","serailiseCustomData","deserialiseCustomData","oldData","reversed","startsWith","createCols","colDefs","createData","date","label","random","Everything","selectionChanged","selectedRange","isDragging","selectionFinished","selectionCleared","focusColumn","focusedCol","replaceDataLarge","replaceDataSmall","updateCell","onKeyPressed","lastKeyPress","colHeaders","cd","headerCell","JSON","stringify","backgroundColor","paddingLeft","paddingRight","FocusColumnGrid","toggleFrozenCols","freezeCols","htmlFor","KeyboardEventsGrid","exampleMeta","pathFragment","name","description","component","undefined","range","appendToLog","update","eventType","paddedType","newRange","prevState","Index","App","exact","path","activeClassName","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.69ccf892.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ReactCanvasGrid_1 = require(\"./ReactCanvasGrid\");\nexports.ReactCanvasGrid = ReactCanvasGrid_1.ReactCanvasGrid;\nvar types_1 = require(\"./types\");\nexports.getCellText = types_1.getCellText;\nexports.cellHasTextFunction = types_1.cellHasTextFunction;\nexports.cellIsEditable = types_1.cellIsEditable;\nvar autofill_1 = require(\"./autofill\");\nexports.repeatSelectionIntoFill = autofill_1.repeatSelectionIntoFill;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar scrollbarGeometry_1 = require(\"./scrollbarGeometry\");\nvar GridGeometry = /** @class */ (function () {\n    function GridGeometry() {\n    }\n    /**\n     * Calculate the boundaries of all columns in the grid, excluding borders. The 'left's are inclusive,\n     * the 'right's are exclusive.\n     */\n    GridGeometry.calculateColumnBoundaries = function (columns, borderWidth) {\n        var curLeft = 0;\n        return columns.map(function (col) {\n            // Left is 0-indexed and inclusive. Right is exclusive, so we can just add the width\n            var boundary = { left: curLeft, right: curLeft + col.width };\n            // Add the border width on to skip it - the border is not within the range of any column\n            curLeft += col.width + borderWidth;\n            return boundary;\n        });\n    };\n    /**\n     * Calculate the total size of the grid, including borders, but excluding gutters\n     */\n    GridGeometry.calculateGridSize = function (data, columnBoundaries, rowHeight, borderWidth) {\n        var numRows = data.length;\n        var height = (numRows * rowHeight) + ((numRows - 1) * borderWidth);\n        var width = columnBoundaries[columnBoundaries.length - 1].right;\n        return { width: width, height: height };\n    };\n    /**\n     * Calculates the total size of the grid, including scrollbar gutters\n     */\n    GridGeometry.calculateGridPlusGutterSize = function (gridSize, rootSize) {\n        // If we don't know how big the root element is yet, assume no gutters\n        if (rootSize === null) {\n            return gridSize;\n        }\n        return {\n            width: gridSize.width + (gridSize.height > rootSize.height ? scrollbarGeometry_1.barWidth + scrollbarGeometry_1.barMarginToEdge * 2 : 0),\n            height: gridSize.height + (gridSize.width > rootSize.width ? scrollbarGeometry_1.barWidth + scrollbarGeometry_1.barMarginToEdge * 2 : 0),\n        };\n    };\n    GridGeometry.calculateCanvasSize = function (gridPlusGutterSize, rootSize) {\n        // First render is before componentDidMount, so before we have calculated the root element's size.\n        // In this case, we just render as 0x0. componentDidMount will then update state,\n        // and we'll re-render\n        if (rootSize === null) {\n            return { width: 0, height: 0 };\n        }\n        return {\n            width: Math.min(rootSize.width, gridPlusGutterSize.width),\n            height: Math.min(rootSize.height, gridPlusGutterSize.height),\n        };\n    };\n    /*\n     * Calculate the height of all the frozen rows and their bottom borders\n     */\n    GridGeometry.calculateFrozenRowsHeight = function (rowHeight, borderWidth, frozenRows) {\n        return (rowHeight + borderWidth) * frozenRows;\n    };\n    /*\n     * Calculate the width of all the frozen rows and their right borders\n     */\n    GridGeometry.calculateFrozenColsWidth = function (columnBoundaries, frozenCols, borderWidth) {\n        var rightmostColIndex = frozenCols - 1;\n        if (rightmostColIndex < 0) {\n            return 0;\n        }\n        return columnBoundaries[rightmostColIndex].right + borderWidth;\n    };\n    GridGeometry.calculateGridCellCoordsFromGridState = function (event, rootRef, gridState) {\n        return GridGeometry.calculateGridCellCoords(event, gridState.columnBoundaries(), gridState.borderWidth(), gridState.rowHeight(), gridState.gridOffset(), gridState.data().length - 1, rootRef);\n    };\n    /**\n     * Calculate the column & row index (i.e. \"grid cell coordinates\") that contains a click. The click coordinates\n     * are given in the window/viewport's frame of reference.\n     */\n    GridGeometry.calculateGridCellCoords = function (event, columnBoundaries, borderWidth, rowHeight, gridOffset, maxRow, root) {\n        if (!root) {\n            throw new Error('Cannot convert mouse event coords to grid coords because rootRef is not set');\n        }\n        return GridGeometry.gridPixelToGridCell(GridGeometry.windowPixelToGridPixel({ x: event.clientX, y: event.clientY }, gridOffset, root), columnBoundaries, borderWidth, rowHeight, maxRow);\n    };\n    GridGeometry.calculateGridPixelCoords = function (event, gridOffset, root) {\n        if (!root) {\n            throw new Error('Cannot convert mouse event coords to grid coords because rootRef is not set');\n        }\n        return GridGeometry.windowPixelToGridPixel({ x: event.clientX, y: event.clientY }, gridOffset, root);\n    };\n    GridGeometry.calculateCellBounds = function (colIndex, rowIndex, rowHeight, borderWidth, columnBoundaries) {\n        var cellLeft = columnBoundaries[colIndex].left;\n        var cellRight = columnBoundaries[colIndex].right;\n        var cellWidth = cellRight - cellLeft;\n        return {\n            left: cellLeft,\n            top: rowIndex * (rowHeight + borderWidth),\n            right: cellRight,\n            bottom: rowIndex * (rowHeight + borderWidth) + rowHeight,\n            width: cellWidth,\n            height: rowHeight,\n        };\n    };\n    GridGeometry.calculateGridOffsetFromFraction = function (fraction, gridLength, canvasLength) {\n        return Math.floor((gridLength - canvasLength) * fraction);\n    };\n    GridGeometry.truncateGridOffset = function (oldOffset, gridSize, canvasSize) {\n        var maxX = gridSize.width - canvasSize.width;\n        var maxY = gridSize.height - canvasSize.height;\n        if (oldOffset.x > maxX || oldOffset.y > maxY) {\n            return {\n                x: Math.min(maxX, oldOffset.x),\n                y: Math.min(maxY, oldOffset.y),\n            };\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Takes an offset in CSS pixels and returns an offset also in CSS pixels, but quantised to\n     * values that produce an integer offset in canvas pixels. This avoids the canvas elements trying\n     * to do any sub-pixel rendering, and thus avoids bluriness in the grid.\n     */\n    GridGeometry.quantiseGridOffset = function (offset, dpr) {\n        return {\n            x: Math.floor(offset.x * dpr) / dpr,\n            y: Math.floor(offset.y * dpr) / dpr,\n        };\n    };\n    GridGeometry.calculateGridOffsetForTargetColumn = function (oldOffset, canvasSize, frozenColsWidth, targetColIndex, columnBoundaries, verticalScrollGutter) {\n        return __assign({}, oldOffset, { x: GridGeometry.calculateGridOffsetXForTargetColumn(oldOffset.x, canvasSize, frozenColsWidth, targetColIndex, columnBoundaries, verticalScrollGutter) });\n    };\n    GridGeometry.calculateGridOffsetForTargetRow = function (oldOffset, canvasSize, frozenRowsHeight, targetRowIndex, rowHeight, borderWidth, numRows, horizontalScrollGutter) {\n        return __assign({}, oldOffset, { y: GridGeometry.calculateGridOffsetYForTargetRow(oldOffset.y, canvasSize, frozenRowsHeight, targetRowIndex, rowHeight, borderWidth, numRows, horizontalScrollGutter) });\n    };\n    GridGeometry.calculateGridOffsetForTargetCell = function (oldOffset, canvasSize, frozenColsWidth, frozenRowsHeight, targetCell, columnBoundaries, rowHeight, borderWidth, numRows, verticalScrollGutter, horizontalScrollGutter) {\n        return {\n            x: GridGeometry.calculateGridOffsetXForTargetColumn(oldOffset.x, canvasSize, frozenColsWidth, targetCell.x, columnBoundaries, verticalScrollGutter),\n            y: GridGeometry.calculateGridOffsetYForTargetRow(oldOffset.y, canvasSize, frozenRowsHeight, targetCell.y, rowHeight, borderWidth, numRows, horizontalScrollGutter),\n        };\n    };\n    GridGeometry.calculateGridOffsetXForTargetColumn = function (oldX, canvasSize, frozenColsWidth, targetColIndex, columnBoundaries, verticalScrollGutter) {\n        if (targetColIndex < 0 || targetColIndex >= columnBoundaries.length) {\n            // The target column index is invalid, so ignore it\n            return oldX;\n        }\n        var gutterWidth = verticalScrollGutter ? verticalScrollGutter.width : 0;\n        var targetBoundaries = columnBoundaries[targetColIndex];\n        var viewLeft = oldX + frozenColsWidth;\n        var viewRight = oldX + canvasSize.width - gutterWidth;\n        if (targetBoundaries.left < viewLeft && targetBoundaries.right > viewRight) {\n            // The target column is wider than the canvas, but already visible - no change needed\n            return oldX;\n        }\n        else if (targetBoundaries.left < viewLeft) {\n            // The target column is to the left, so move offset so it's the leftmost column\n            return Math.max(targetBoundaries.left - frozenColsWidth, 0);\n        }\n        else if (targetBoundaries.right > viewRight) {\n            // The target column is to the right, so move offset so it's the rightmost column\n            return targetBoundaries.right - canvasSize.width + gutterWidth;\n        }\n        else {\n            // Otherwise, the target column must be in view, so no change is needed\n            return oldX;\n        }\n    };\n    GridGeometry.calculateGridOffsetYForTargetRow = function (oldY, canvasSize, frozenRowsHeight, targetRowIndex, rowHeight, borderWidth, numRows, horizontalScrollGutter) {\n        if (targetRowIndex < 0 || targetRowIndex >= (rowHeight + borderWidth) * numRows) {\n            // The target row index is invalid, so ignore it\n            return oldY;\n        }\n        var gutterHeight = horizontalScrollGutter ? horizontalScrollGutter.height : 0;\n        var targetRowTop = (rowHeight + borderWidth) * targetRowIndex;\n        var targetRowBottom = targetRowTop + rowHeight;\n        var viewTop = oldY + frozenRowsHeight;\n        var viewBottom = oldY + canvasSize.height - gutterHeight;\n        if (targetRowTop < viewTop && targetRowBottom > viewBottom) {\n            // The target row is taller than the canvas, but already visible - no change needed\n            return oldY;\n        }\n        else if (targetRowTop < viewTop) {\n            // The target column is upwards, so move offset so it's the topmost row\n            return Math.max(targetRowTop - frozenRowsHeight, 0);\n        }\n        else if (targetRowBottom > viewBottom) {\n            // The target row is downwards, so move offset so it's the bottommost column\n            return targetRowBottom - canvasSize.height + gutterHeight;\n        }\n        else {\n            // Otherwise, the target row must be in view, so no change is needed\n            return oldY;\n        }\n    };\n    /**\n     * Calculates the area of the grid visible on the canvas\n     */\n    GridGeometry.calculateVisibleRect = function (gridOffset, canvasSize) {\n        return {\n            top: gridOffset.y,\n            bottom: gridOffset.y + canvasSize.height,\n            height: canvasSize.height,\n            left: gridOffset.x,\n            right: gridOffset.x + canvasSize.width,\n            width: canvasSize.width,\n        };\n    };\n    GridGeometry.isWindowPixelWithinComponent = function (event, root) {\n        if (!root) {\n            throw new Error('Cannot convert window coords to component coords because rootRef is not set');\n        }\n        var rootClientRect = root.getBoundingClientRect();\n        return event.clientX >= rootClientRect.left && event.clientX <= rootClientRect.right &&\n            event.clientY >= rootClientRect.top && event.clientY <= rootClientRect.bottom;\n    };\n    GridGeometry.calculateComponentPixel = function (event, root) {\n        return GridGeometry.windowPixelToComponentPixel({ x: event.clientX, y: event.clientY }, root);\n    };\n    GridGeometry.windowPixelToComponentPixel = function (_a, root) {\n        var x = _a.x, y = _a.y;\n        if (!root) {\n            throw new Error('Cannot convert window coords to component coords because rootRef is not set');\n        }\n        var rootClientRect = root.getBoundingClientRect();\n        return {\n            x: x - rootClientRect.left,\n            y: y - rootClientRect.top,\n        };\n    };\n    GridGeometry.windowPixelToGridPixel = function (_a, gridOffset, root) {\n        var x = _a.x, y = _a.y;\n        var rootClientRect = root.getBoundingClientRect();\n        return {\n            x: x + gridOffset.x - rootClientRect.left,\n            y: y + gridOffset.y - rootClientRect.top,\n        };\n    };\n    GridGeometry.gridPixelToGridCell = function (_a, columnBoundaries, borderWidth, rowHeight, maxRow) {\n        var x = _a.x, y = _a.y;\n        // Start with the rightmost col index; it'll be revised down, unless the coord is to the right of all cols\n        var colIndex = columnBoundaries.length - 1;\n        for (var i = 0; i < columnBoundaries.length; i++) {\n            if (columnBoundaries[i].right > x) {\n                colIndex = i;\n                break;\n            }\n        }\n        /*\n        The following (dodgy?) algebra gives the formula for finding the row index, where borders belong to lower cells:\n            Yclick <= (Ycell-1)b + (Ycell)c\n            Yclick <= Ycell(b) - b + Ycell(c)\n            Yclick <= Ycell(b + c) - b\n            Yclick + b <= Ycell(b + c)\n            (Yclick + b)/(b + c) <= Ycell\n            Ycell >= (Yclick + b)/(b + c)\n            Ycell = floor((Yclick + b)/(b + c))\n        It's then truncated to maxRow, in case the coord is beyond the final row\n        */\n        var rowIndex = Math.min(maxRow, Math.floor((y + borderWidth) / (rowHeight + borderWidth)));\n        return {\n            y: rowIndex,\n            x: colIndex,\n        };\n    };\n    return GridGeometry;\n}());\nexports.GridGeometry = GridGeometry;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BaseSelectionState = /** @class */ (function () {\n    function BaseSelectionState(isSelectionInProgress) {\n        this.isSelectionInProgress = isSelectionInProgress;\n    }\n    return BaseSelectionState;\n}());\nexports.BaseSelectionState = BaseSelectionState;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar allGridSelection_1 = require(\"./allGridSelection\");\nvar cellsSelection_1 = require(\"./cellsSelection\");\nvar colsSelection_1 = require(\"./colsSelection\");\nvar rowsSelection_1 = require(\"./rowsSelection\");\nexports.createSelectionStateForMouseDown = function (cell, meta) {\n    switch (meta.region) {\n        case 'cells':\n            return new cellsSelection_1.CellsSelection(cell, { left: cell.x, right: cell.x, top: cell.y, bottom: cell.y }, cell, true);\n        case 'frozen-cols':\n            return new rowsSelection_1.RowsSelection(cell, cell.y, cell.y, true, cell.y);\n        case 'frozen-rows':\n            return new colsSelection_1.ColsSelection(cell, cell.x, cell.x, true, cell.x);\n        case 'frozen-corner':\n            return new allGridSelection_1.AllGridSelection(true);\n        default:\n            throw new Error(\"Unsupported click meta region: \" + meta.region);\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.barWidth = 7;\nexports.barMarginToEdge = 2;\nexports.barCapMargin = 4;\nvar minBarLength = 10;\nfunction getHorizontalScrollbarLength(canvasSize, gridSize, frozenColsWidth) {\n    return calculateLength(canvasSize.width, gridSize.width, frozenColsWidth);\n}\nexports.getHorizontalScrollbarLength = getHorizontalScrollbarLength;\nfunction getVerticalScrollbarLength(canvasSize, gridSize, frozenRowsHeight) {\n    return calculateLength(canvasSize.height, gridSize.height, frozenRowsHeight);\n}\nexports.getVerticalScrollbarLength = getVerticalScrollbarLength;\nfunction calculateLength(canvasLength, gridLength, frozenLength) {\n    var availableLength = canvasLength - frozenLength - exports.barWidth - 2 * exports.barCapMargin - exports.barMarginToEdge;\n    var contentRatio = canvasLength / gridLength;\n    var length = Math.round(availableLength * contentRatio);\n    return Math.max(length, minBarLength);\n}\nexports.calculateLength = calculateLength;\nfunction getHorizontalScrollbarExtent(gridOffset, canvasSize, gridSize, horizontalBarLength, frozenColsWidth) {\n    return calculateExtent(gridOffset.x, canvasSize.width, gridSize.width, horizontalBarLength, frozenColsWidth);\n}\nexports.getHorizontalScrollbarExtent = getHorizontalScrollbarExtent;\nfunction getVerticalScrollbarExtent(gridOffset, canvasSize, gridSize, verticalBarLength, frozenRowsHeight) {\n    return calculateExtent(gridOffset.y, canvasSize.height, gridSize.height, verticalBarLength, frozenRowsHeight);\n}\nexports.getVerticalScrollbarExtent = getVerticalScrollbarExtent;\nfunction calculateExtent(gridOffset, canvasLength, gridLength, barLength, frozenLength) {\n    var scrollableGridLength = gridLength - canvasLength;\n    var scrollFraction = gridOffset / scrollableGridLength;\n    var scrollableCanvasLength = canvasLength - frozenLength - barLength - exports.barWidth - 2 * exports.barCapMargin - exports.barMarginToEdge;\n    var start = Math.round(scrollableCanvasLength * scrollFraction) + frozenLength + exports.barCapMargin;\n    return { start: start, end: start + barLength };\n}\nexports.calculateExtent = calculateExtent;\nfunction getHorizontalScrollbarPos(extent, canvasSize, gridSize) {\n    if (gridSize.width > canvasSize.width) {\n        var transverse = calculateTransversePosition(canvasSize.height);\n        return { extent: extent, transverse: transverse };\n    }\n    else {\n        return null;\n    }\n}\nexports.getHorizontalScrollbarPos = getHorizontalScrollbarPos;\nfunction getVerticalScrollbarPos(extent, canvasSize, gridSize) {\n    if (gridSize.height > canvasSize.height) {\n        var transverse = calculateTransversePosition(canvasSize.width);\n        return { extent: extent, transverse: transverse };\n    }\n    else {\n        return null;\n    }\n}\nexports.getVerticalScrollbarPos = getVerticalScrollbarPos;\nfunction calculateTransversePosition(canvasTransverse) {\n    return canvasTransverse - (exports.barWidth / 2) - exports.barMarginToEdge;\n}\nfunction getVerticalGutterBounds(canvasSize, gridSize) {\n    if (gridSize.height > canvasSize.height) {\n        return {\n            top: 0,\n            left: canvasSize.width - (exports.barWidth + exports.barMarginToEdge * 2),\n            height: canvasSize.height,\n            width: exports.barWidth + exports.barMarginToEdge * 2,\n            bottom: canvasSize.height,\n            right: canvasSize.width,\n        };\n    }\n    else {\n        return null;\n    }\n}\nexports.getVerticalGutterBounds = getVerticalGutterBounds;\nfunction getHorizontalGutterBounds(canvasSize, gridSize) {\n    if (gridSize.width > canvasSize.width) {\n        return {\n            left: 0,\n            top: canvasSize.height - (exports.barWidth + exports.barMarginToEdge * 2),\n            width: canvasSize.width,\n            height: exports.barWidth + exports.barMarginToEdge * 2,\n            right: canvasSize.width,\n            bottom: canvasSize.height,\n        };\n    }\n    else {\n        return null;\n    }\n}\nexports.getHorizontalGutterBounds = getHorizontalGutterBounds;\nfunction calculateFractionFromStartPos(start, frozenLength, canvasLength, barLength) {\n    var scrollableCanvasLength = canvasLength - frozenLength - barLength - exports.barWidth - 2 * exports.barCapMargin - exports.barMarginToEdge;\n    return Math.min(Math.max((start - frozenLength - exports.barCapMargin) / scrollableCanvasLength, 0), 1);\n}\nexports.calculateFractionFromStartPos = calculateFractionFromStartPos;\nfunction getHitScrollBar(coord, horizontalPosition, verticalPosition) {\n    var halfBarHeight = Math.floor(exports.barWidth / 2);\n    if (horizontalPosition) {\n        var hTop = horizontalPosition.transverse - halfBarHeight;\n        var hBottom = horizontalPosition.transverse + halfBarHeight;\n        var hExtent = horizontalPosition.extent;\n        if (coord.x >= hExtent.start && coord.x <= hExtent.end && coord.y >= hTop && coord.y <= hBottom) {\n            return 'x';\n        }\n    }\n    if (verticalPosition) {\n        var vLeft = verticalPosition.transverse - halfBarHeight;\n        var vRight = verticalPosition.transverse + halfBarHeight;\n        var vExtent = verticalPosition.extent;\n        if (coord.y >= vExtent.start && coord.y <= vExtent.end && coord.x >= vLeft && coord.x <= vRight) {\n            return 'y';\n        }\n    }\n    return null;\n}\nexports.getHitScrollBar = getHitScrollBar;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils\");\nvar focusOffset_1 = require(\"./focusOffset\");\nvar selectionState_1 = require(\"./selectionState\");\nvar selectionStateFactory_1 = require(\"./selectionStateFactory\");\nfunction createSingleCell(cell) {\n    return new CellsSelection(cell, { left: cell.x, right: cell.x, top: cell.y, bottom: cell.y }, cell, false);\n}\nvar CellsSelection = /** @class */ (function (_super) {\n    __extends(CellsSelection, _super);\n    function CellsSelection(editCursorCell, selection, focusCell, isSelectionInProgress, autofillDragCell) {\n        if (autofillDragCell === void 0) { autofillDragCell = null; }\n        var _this = _super.call(this, isSelectionInProgress) || this;\n        _this.arrowUp = function (cellBounds) {\n            var newCell = truncateCoord({ x: _this.editCursorCell.x, y: _this.editCursorCell.y - 1 }, cellBounds);\n            return createSingleCell(newCell);\n        };\n        _this.arrowDown = function (cellBounds) {\n            var newCell = truncateCoord({ x: _this.editCursorCell.x, y: _this.editCursorCell.y + 1 }, cellBounds);\n            return createSingleCell(newCell);\n        };\n        _this.arrowLeft = function (cellBounds) {\n            var newCell = truncateCoord({ x: _this.editCursorCell.x - 1, y: _this.editCursorCell.y }, cellBounds);\n            return createSingleCell(newCell);\n        };\n        _this.arrowRight = function (cellBounds) {\n            var newCell = truncateCoord({ x: _this.editCursorCell.x + 1, y: _this.editCursorCell.y }, cellBounds);\n            return createSingleCell(newCell);\n        };\n        _this.shiftArrowUp = function (cellBounds) {\n            if (_this.editCursorCell.y === _this.selection.bottom) {\n                var newY = truncateY(_this.selection.top - 1, cellBounds);\n                var bounds = __assign({}, _this.selection, { top: newY });\n                var focusCell = { x: _this.focusCell.x, y: newY };\n                return new CellsSelection(_this.editCursorCell, bounds, focusCell, false);\n            }\n            else {\n                var newY = truncateY(_this.selection.bottom - 1, cellBounds);\n                var bounds = __assign({}, _this.selection, { bottom: newY });\n                var focusCell = { x: _this.focusCell.x, y: newY };\n                return new CellsSelection(_this.editCursorCell, bounds, focusCell, false);\n            }\n        };\n        _this.shiftArrowDown = function (cellBounds) {\n            if (_this.editCursorCell.y === _this.selection.top) {\n                var newY = truncateY(_this.selection.bottom + 1, cellBounds);\n                var bounds = __assign({}, _this.selection, { bottom: newY });\n                var focusCell = { x: _this.focusCell.x, y: newY };\n                return new CellsSelection(_this.editCursorCell, bounds, focusCell, false);\n            }\n            else {\n                var newY = truncateY(_this.selection.top + 1, cellBounds);\n                var bounds = __assign({}, _this.selection, { top: newY });\n                var focusCell = { x: _this.focusCell.x, y: newY };\n                return new CellsSelection(_this.editCursorCell, bounds, focusCell, false);\n            }\n        };\n        _this.shiftArrowLeft = function (cellBounds) {\n            if (_this.editCursorCell.x === _this.selection.right) {\n                var newX = truncateX(_this.selection.left - 1, cellBounds);\n                var bounds = __assign({}, _this.selection, { left: newX });\n                var focusCell = { y: _this.focusCell.y, x: newX };\n                return new CellsSelection(_this.editCursorCell, bounds, focusCell, false);\n            }\n            else {\n                var newX = truncateX(_this.selection.right - 1, cellBounds);\n                var bounds = __assign({}, _this.selection, { right: newX });\n                var focusCell = { y: _this.focusCell.y, x: newX };\n                return new CellsSelection(_this.editCursorCell, bounds, focusCell, false);\n            }\n        };\n        _this.shiftArrowRight = function (cellBounds) {\n            if (_this.editCursorCell.x === _this.selection.left) {\n                var newX = truncateX(_this.selection.right + 1, cellBounds);\n                var bounds = __assign({}, _this.selection, { right: newX });\n                var focusCell = { y: _this.focusCell.y, x: newX };\n                return new CellsSelection(_this.editCursorCell, bounds, focusCell, false);\n            }\n            else {\n                var newX = truncateX(_this.selection.left + 1, cellBounds);\n                var bounds = __assign({}, _this.selection, { left: newX });\n                var focusCell = { y: _this.focusCell.y, x: newX };\n                return new CellsSelection(_this.editCursorCell, bounds, focusCell, false);\n            }\n        };\n        _this.mouseDown = function (cell, meta) { return selectionStateFactory_1.createSelectionStateForMouseDown(cell, meta); };\n        _this.shiftMouseDown = function (cell, meta) {\n            if (meta.region !== 'cells') {\n                return _this;\n            }\n            var bounds = _this.selectionBoundsTo(cell);\n            return new CellsSelection(_this.editCursorCell, bounds, cell, true);\n        };\n        _this.mouseMove = function (cell) {\n            if (_this.autofillDragCell !== null) {\n                if (!utils_1.equalCoord(cell, _this.autofillDragCell)) {\n                    return new CellsSelection(_this.editCursorCell, _this.selection, cell, true, cell);\n                }\n            }\n            else if (_this.isSelectionInProgress) {\n                var bounds = _this.selectionBoundsTo(cell);\n                if (!utils_1.equalBounds(_this.selection, bounds)) {\n                    return new CellsSelection(_this.editCursorCell, bounds, cell, true);\n                }\n            }\n            return _this;\n        };\n        _this.mouseUp = function () {\n            if (_this.autofillDragCell !== null) {\n                var fillRange = _this.getAutofillRange();\n                if (fillRange) {\n                    var mergedRange = mergeBounds(_this.selection, fillRange);\n                    return new CellsSelection(_this.editCursorCell, mergedRange, _this.focusCell, false, null);\n                }\n                else {\n                    return new CellsSelection(_this.editCursorCell, _this.selection, _this.focusCell, false, null);\n                }\n            }\n            else if (_this.isSelectionInProgress) {\n                return new CellsSelection(_this.editCursorCell, _this.selection, _this.focusCell, false);\n            }\n            else {\n                return _this;\n            }\n        };\n        _this.mouseDownOnAutofillHandle = function () {\n            return new CellsSelection(_this.editCursorCell, _this.selection, _this.focusCell, true, _this.editCursorCell);\n        };\n        _this.getSelectionRange = function () {\n            return {\n                topLeft: {\n                    x: _this.selection.left,\n                    y: _this.selection.top,\n                },\n                bottomRight: {\n                    x: _this.selection.right,\n                    y: _this.selection.bottom,\n                },\n            };\n        };\n        _this.getFocusGridOffset = function (gridState) {\n            return focusOffset_1.calculateGridOffsetForTargetCell(gridState, _this.focusCell);\n        };\n        _this.getCursorCell = function () { return _this.editCursorCell; };\n        _this.isAutofillDragging = function () { return _this.autofillDragCell !== null; };\n        _this.getAutofillRange = function () {\n            if (_this.autofillDragCell === null) {\n                return null;\n            }\n            var selRange = _this.getSelectionRange();\n            if (_this.autofillDragCell.y > selRange.bottomRight.y) {\n                // Below the selection\n                return {\n                    topLeft: {\n                        x: selRange.topLeft.x,\n                        y: selRange.bottomRight.y + 1,\n                    },\n                    bottomRight: {\n                        x: selRange.bottomRight.x,\n                        y: _this.autofillDragCell.y,\n                    },\n                };\n            }\n            else if (_this.autofillDragCell.y < selRange.topLeft.y) {\n                // Above the selection\n                return {\n                    topLeft: {\n                        x: selRange.topLeft.x,\n                        y: _this.autofillDragCell.y,\n                    },\n                    bottomRight: {\n                        x: selRange.bottomRight.x,\n                        y: selRange.topLeft.y - 1,\n                    },\n                };\n            }\n            else if (_this.autofillDragCell.x > selRange.bottomRight.x) {\n                // Right of the selection\n                return {\n                    topLeft: {\n                        x: selRange.bottomRight.x + 1,\n                        y: selRange.topLeft.y,\n                    },\n                    bottomRight: {\n                        x: _this.autofillDragCell.x,\n                        y: selRange.bottomRight.y,\n                    },\n                };\n            }\n            else if (_this.autofillDragCell.x < selRange.topLeft.x) {\n                // Left of the selection\n                return {\n                    topLeft: {\n                        x: _this.autofillDragCell.x,\n                        y: selRange.topLeft.y,\n                    },\n                    bottomRight: {\n                        x: selRange.topLeft.x - 1,\n                        y: selRange.bottomRight.y,\n                    },\n                };\n            }\n            else {\n                return null;\n            }\n        };\n        _this.selectionBoundsTo = function (cell) {\n            return {\n                left: Math.min(_this.editCursorCell.x, cell.x),\n                right: Math.max(_this.editCursorCell.x, cell.x),\n                top: Math.min(_this.editCursorCell.y, cell.y),\n                bottom: Math.max(_this.editCursorCell.y, cell.y),\n            };\n        };\n        _this.editCursorCell = editCursorCell;\n        _this.selection = selection;\n        _this.focusCell = focusCell,\n            _this.autofillDragCell = autofillDragCell;\n        return _this;\n    }\n    return CellsSelection;\n}(selectionState_1.BaseSelectionState));\nexports.CellsSelection = CellsSelection;\nvar truncateCoord = function (coord, cellBounds) {\n    return {\n        x: Math.min(Math.max(coord.x, cellBounds.frozenCols), cellBounds.numCols - 1),\n        y: Math.min(Math.max(coord.y, cellBounds.frozenRows), cellBounds.numRows - 1),\n    };\n};\nvar truncateX = function (x, cellBounds) {\n    return Math.min(Math.max(x, cellBounds.frozenCols), cellBounds.numCols - 1);\n};\nvar truncateY = function (y, cellBounds) {\n    return Math.min(Math.max(y, cellBounds.frozenRows), cellBounds.numRows - 1);\n};\nvar mergeBounds = function (a, b) {\n    return {\n        top: Math.min(a.top, b.topLeft.y),\n        bottom: Math.max(a.bottom, b.bottomRight.y),\n        left: Math.min(a.left, b.topLeft.x),\n        right: Math.max(a.right, b.bottomRight.x),\n    };\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar selectionState_1 = require(\"./selectionState\");\nvar selectionStateFactory_1 = require(\"./selectionStateFactory\");\nvar NoSelection = /** @class */ (function (_super) {\n    __extends(NoSelection, _super);\n    function NoSelection() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.arrowUp = function (_) { return _this; };\n        _this.arrowDown = function (_) { return _this; };\n        _this.arrowLeft = function (_) { return _this; };\n        _this.arrowRight = function (_) { return _this; };\n        _this.shiftArrowUp = function (_) { return _this; };\n        _this.shiftArrowDown = function (_) { return _this; };\n        _this.shiftArrowLeft = function (_) { return _this; };\n        _this.shiftArrowRight = function (_) { return _this; };\n        _this.mouseMove = function () { return _this; };\n        _this.mouseUp = function () { return _this; };\n        _this.mouseDown = function (cell, meta) { return selectionStateFactory_1.createSelectionStateForMouseDown(cell, meta); };\n        _this.shiftMouseDown = function (cell, meta) {\n            return _this.mouseDown(cell, meta);\n        };\n        _this.getSelectionRange = function () { return null; };\n        _this.getCursorCell = function () { return null; };\n        _this.getFocusGridOffset = function (_) { return null; };\n        return _this;\n    }\n    return NoSelection;\n}(selectionState_1.BaseSelectionState));\nexports.NoSelection = NoSelection;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instigator_1 = require(\"instigator\");\nvar React = __importStar(require(\"react\"));\nvar gridCanvasRenderer_1 = require(\"./gridCanvasRenderer\");\nvar GridCanvas = /** @class */ (function (_super) {\n    __extends(GridCanvas, _super);\n    function GridCanvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.canvasRef = React.createRef();\n        _this.renderer = null;\n        _this.renderCallback = null;\n        return _this;\n        // TODO: Need to call updateProps on componentDidUpdate?\n    }\n    GridCanvas.prototype.render = function () {\n        return (React.createElement(\"canvas\", { ref: this.canvasRef, width: this.props.width * this.props.gridState.dpr(), height: this.props.height * this.props.gridState.dpr(), style: {\n                position: 'absolute',\n                top: this.props.top + \"px\",\n                left: this.props.left + \"px\",\n                width: this.props.width + \"px\",\n                height: this.props.height + \"px\",\n            } }));\n    };\n    GridCanvas.prototype.componentDidMount = function () {\n        var _this = this;\n        if (!this.canvasRef.current) {\n            throw new Error('canvasRef is null in componentDidMount - cannot create renderer');\n        }\n        var gridState = this.props.gridState;\n        var basicProps = instigator_1.mergeTransformer({\n            data: gridState.data,\n            rowHeight: gridState.rowHeight,\n            colBoundaries: gridState.columnBoundaries,\n            columns: gridState.columns,\n            gridInnerSize: gridState.gridInnerSize,\n            borderWidth: gridState.borderWidth,\n        });\n        {\n            var canvasSize = { width: this.props.width, height: this.props.height };\n            this.renderer = new gridCanvasRenderer_1.GridCanvasRenderer(this.canvasRef.current, canvasSize, basicProps(), gridState.dpr());\n        }\n        this.renderCallback = instigator_1.consumer([basicProps, this.props.posProps], function (newBasicProps, newPosProps) {\n            if (_this.renderer) {\n                if (!_this.canvasRef.current) {\n                    throw new Error('canvasRef is null in componentDidMount - cannot create renderer');\n                }\n                var canvasSize = { width: _this.props.width, height: _this.props.height };\n                _this.renderer.updateProps(_this.canvasRef.current, canvasSize, newBasicProps, newPosProps);\n            }\n        });\n    };\n    GridCanvas.prototype.componentWillUnmount = function () {\n        if (this.renderCallback) {\n            this.renderCallback.deregister();\n        }\n    };\n    return GridCanvas;\n}(React.Component));\nexports.GridCanvas = GridCanvas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction numberBetween(num, min, max) {\n    return Math.max(Math.min(num, max), min);\n}\nexports.numberBetween = numberBetween;\nfunction equalCoord(a, b) {\n    return a.x === b.x && a.y === b.y;\n}\nexports.equalCoord = equalCoord;\nfunction equalSelectRange(a, b) {\n    return a === b ||\n        (a !== null && b !== null && equalCoord(a.topLeft, b.topLeft) && equalCoord(a.bottomRight, b.bottomRight));\n}\nexports.equalSelectRange = equalSelectRange;\nfunction equalBounds(a, b) {\n    return a === b || (a !== null &&\n        b !== null &&\n        a.top === b.top &&\n        a.bottom === b.bottom &&\n        a.left === b.left &&\n        a.right === b.right);\n}\nexports.equalBounds = equalBounds;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cellHasTextFunction = function (cell) {\n    return !!cell.getText;\n};\nexports.getCellText = function (cell) {\n    return exports.cellHasTextFunction(cell) ? cell.getText(cell.data) : cell.text;\n};\nexports.cellIsEditable = function (cell) {\n    return !!cell.editor;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar autofillMouseEvents_1 = require(\"./autofillMouseEvents\");\nvar gridMouseEvents_1 = require(\"./gridMouseEvents\");\nvar scrollbarMouseEvents_1 = require(\"./scrollbarMouseEvents\");\nvar scrolling_1 = require(\"./scrolling\");\nfunction isLeftButton(event) {\n    // tslint:disable-next-line: no-bitwise\n    return (event.buttons & 1) === 1;\n}\nexports.isLeftButton = isLeftButton;\nfunction handleWheel(e, gridState) {\n    // Browsers may use a 'delta mode' when wheeling, requesting multi-pixel movement\n    // See https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaMode\n    var scaleFactors = {\n        0: 1,\n        1: 16,\n    };\n    var scaleFactor = scaleFactors[e.deltaMode || 0];\n    var willUpdate = scrolling_1.updateOffsetByDelta(e.deltaX * scaleFactor, e.deltaY * scaleFactor, gridState);\n    if (willUpdate) {\n        // The grid is going to move, so we want to prevent any other scrolling from happening\n        e.preventDefault();\n    }\n}\nexports.handleWheel = handleWheel;\nfunction handleMouseDown(event, coord, rootRef, gridState, props, editingCell) {\n    if (scrollbarMouseEvents_1.mouseDownOnScrollbar(coord, gridState)) {\n        return;\n    }\n    else if (autofillMouseEvents_1.mouseDownOnAutofillHandle(event, gridState, rootRef)) {\n        return;\n    }\n    else {\n        gridMouseEvents_1.mouseDownOnGrid(event, coord, rootRef, props, gridState, editingCell);\n    }\n}\nexports.handleMouseDown = handleMouseDown;\nfunction handleMouseMove(event, coord, rootRef, gridState, props, editingCell) {\n    if (scrollbarMouseEvents_1.mouseDragOnScrollbar(coord, gridState)) {\n        return;\n    }\n    else if (gridMouseEvents_1.mouseDragOnGrid(event, rootRef, props, gridState, editingCell)) {\n        return;\n    }\n    else if (autofillMouseEvents_1.mouseHoverOnAutofillHandle(event, gridState, rootRef)) {\n        return;\n    }\n    else {\n        scrollbarMouseEvents_1.mouseHoverOnScrollbar(coord, gridState);\n    }\n}\nexports.handleMouseMove = handleMouseMove;\nfunction handleMouseUp(coord, gridState, props, editingCell) {\n    if (scrollbarMouseEvents_1.mouseUpOnScrollbar()) {\n        scrollbarMouseEvents_1.mouseHoverOnScrollbar(coord, gridState);\n        return;\n    }\n    else {\n        gridMouseEvents_1.mouseUpOnGrid(props, gridState, editingCell);\n    }\n}\nexports.handleMouseUp = handleMouseUp;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils\");\nexports.updateOffsetByDelta = function (deltaX, deltaY, gridState) {\n    if (!gridState.rootSize()) {\n        return false;\n    }\n    var canvasSize = gridState.canvasSize();\n    var gridSize = gridState.gridSize();\n    var gridOffset = gridState.gridOffset();\n    var newX = utils_1.numberBetween(gridOffset.x + deltaX, 0, gridSize.width - canvasSize.width);\n    var newY = utils_1.numberBetween(gridOffset.y + deltaY, 0, gridSize.height - canvasSize.height);\n    if (newX === gridOffset.x && newY === gridOffset.y) {\n        // We won't be moving, so return false\n        return false;\n    }\n    gridState.gridOffsetRaw({ x: newX, y: newY });\n    // We did move, so return true\n    return true;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar types_1 = require(\"./types\");\nexports.borderColour = 'lightgrey';\nvar CommonCanvasRenderer = /** @class */ (function () {\n    function CommonCanvasRenderer(canvas, dpr, alpha) {\n        var _this = this;\n        this.queuedRender = null;\n        this.setCanvas = function (canvas) {\n            _this.canvas = canvas;\n            var context = _this.canvas.getContext('2d', { alpha: _this.alpha });\n            if (!context) {\n                throw new Error('Could not create canvas contex');\n            }\n            _this.context = context;\n        };\n        this.drawCellBackgroundDefault = function (context, cellBounds) {\n            context.fillStyle = 'white';\n            context.fillRect(cellBounds.left, cellBounds.top, cellBounds.width, cellBounds.height);\n        };\n        this.drawCellTextDefault = function (context, cellBounds, cell) {\n            context.fillStyle = 'black';\n            context.textBaseline = 'middle';\n            var verticalCentre = cellBounds.top + (cellBounds.height / 2);\n            var text = types_1.getCellText(cell);\n            context.fillText(text, cellBounds.left + 2, verticalCentre, cellBounds.width - 4);\n        };\n        this.alpha = alpha;\n        this.dpr = dpr;\n        // Below is same as setCanvas, copied here to appease compiler\n        this.canvas = canvas;\n        var context = this.canvas.getContext('2d', { alpha: this.alpha });\n        if (!context) {\n            throw new Error('Could not create canvas contex');\n        }\n        this.context = context;\n    }\n    CommonCanvasRenderer.prototype.drawScaled = function (draw) {\n        var _this = this;\n        if (this.queuedRender !== null) {\n            return;\n        }\n        this.queuedRender = window.requestAnimationFrame(function () {\n            _this.context.scale(_this.dpr, _this.dpr);\n            try {\n                draw();\n            }\n            finally {\n                _this.context.scale(1 / _this.dpr, 1 / _this.dpr);\n                _this.queuedRender = null;\n            }\n        });\n    };\n    CommonCanvasRenderer.prototype.drawCell = function (cell, cellBounds, metadata) {\n        var renderBackground = cell.renderBackground || this.drawCellBackgroundDefault;\n        var renderText = cell.renderText || this.drawCellTextDefault;\n        renderBackground(this.context, cellBounds, cell, metadata);\n        renderText(this.context, cellBounds, cell, metadata);\n    };\n    return CommonCanvasRenderer;\n}());\nexports.CommonCanvasRenderer = CommonCanvasRenderer;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instigator_1 = require(\"instigator\");\nvar shallow_equals_1 = __importDefault(require(\"shallow-equals\"));\nvar gridGeometry_1 = require(\"./gridGeometry\");\nvar ScrollbarGeometry = __importStar(require(\"./scrollbarGeometry\"));\nvar noSelection_1 = require(\"./selectionState/noSelection\");\nexports.refEquals = function (a, b) { return a === b; };\nexports.shallowEqualsExceptFunctions = function (a, b) {\n    if (typeof a === 'function' && typeof b === 'function') {\n        return a === b;\n    }\n    else {\n        return shallow_equals_1.default(a, b);\n    }\n};\nvar GridState = /** @class */ (function () {\n    function GridState(columns, data, rowHeight, borderWidth, frozenRows, frozenCols, shouldAllowAutofill) {\n        this.columns = instigator_1.activeSource(columns);\n        this.data = instigator_1.activeSource(data);\n        this.rowHeight = instigator_1.activeSource(rowHeight);\n        this.borderWidth = instigator_1.activeSource(borderWidth);\n        this.frozenRows = instigator_1.activeSource(frozenRows);\n        this.frozenCols = instigator_1.activeSource(frozenCols);\n        this.shouldAllowAutofill = instigator_1.activeSource(shouldAllowAutofill, exports.refEquals);\n        this.dpr = instigator_1.activeSource(window.devicePixelRatio);\n        this.rootSize = instigator_1.activeSource(null);\n        this.gridOffsetRaw = instigator_1.activeSource({ x: 0, y: 0 });\n        this.selectionState = instigator_1.activeSource(new noSelection_1.NoSelection(false));\n        this.hoveredScrollbar = instigator_1.activeSource(null);\n        this.autofillHandleIsHovered = instigator_1.activeSource(false);\n        this.gridOffset = instigator_1.transformer([this.gridOffsetRaw, this.dpr], gridGeometry_1.GridGeometry.quantiseGridOffset);\n        this.columnBoundaries = instigator_1.transformer([this.columns, this.borderWidth], gridGeometry_1.GridGeometry.calculateColumnBoundaries);\n        this.gridInnerSize = instigator_1.transformer([this.data, this.columnBoundaries, this.rowHeight, this.borderWidth], gridGeometry_1.GridGeometry.calculateGridSize);\n        this.gridSize = instigator_1.transformer([this.gridInnerSize, this.rootSize], gridGeometry_1.GridGeometry.calculateGridPlusGutterSize);\n        this.cellBounds = instigator_1.transformer([this.data, this.columns, this.frozenRows, this.frozenCols], function (d, c, fr, fc) { return ({\n            numCols: c.length,\n            numRows: d.length,\n            frozenCols: fc,\n            frozenRows: fr,\n        }); });\n        this.canvasSize = instigator_1.transformer([this.gridSize, this.rootSize], gridGeometry_1.GridGeometry.calculateCanvasSize);\n        this.visibleRect = instigator_1.transformer([this.gridOffset, this.canvasSize], gridGeometry_1.GridGeometry.calculateVisibleRect);\n        this.frozenColsWidth = instigator_1.transformer([this.columnBoundaries, this.frozenCols, this.borderWidth], gridGeometry_1.GridGeometry.calculateFrozenColsWidth);\n        this.frozenRowsHeight = instigator_1.transformer([this.rowHeight, this.borderWidth, this.frozenRows], gridGeometry_1.GridGeometry.calculateFrozenRowsHeight);\n        this.horizontalScrollbarLength = instigator_1.transformer([this.canvasSize, this.gridSize, this.frozenColsWidth], ScrollbarGeometry.getHorizontalScrollbarLength);\n        this.verticalScrollbarLength = instigator_1.transformer([this.canvasSize, this.gridSize, this.frozenRowsHeight], ScrollbarGeometry.getVerticalScrollbarLength);\n        this.horizontalScrollbarExtent = instigator_1.transformer([this.gridOffset, this.canvasSize, this.gridSize, this.horizontalScrollbarLength, this.frozenColsWidth], ScrollbarGeometry.getHorizontalScrollbarExtent);\n        this.verticalScrollbarExtent = instigator_1.transformer([this.gridOffset, this.canvasSize, this.gridSize, this.verticalScrollbarLength, this.frozenRowsHeight], ScrollbarGeometry.getVerticalScrollbarExtent);\n        this.horizontalScrollbarPos = instigator_1.transformer([this.horizontalScrollbarExtent, this.canvasSize, this.gridSize], ScrollbarGeometry.getHorizontalScrollbarPos);\n        this.verticalScrollbarPos = instigator_1.transformer([this.verticalScrollbarExtent, this.canvasSize, this.gridSize], ScrollbarGeometry.getVerticalScrollbarPos);\n        this.horizontalGutterBounds = instigator_1.transformer([this.canvasSize, this.gridInnerSize], ScrollbarGeometry.getHorizontalGutterBounds);\n        this.verticalGutterBounds = instigator_1.transformer([this.canvasSize, this.gridInnerSize], ScrollbarGeometry.getVerticalGutterBounds);\n        this.cursorType = instigator_1.transformer([this.autofillHandleIsHovered], function (h) { return h ? 'crosshair' : 'default'; });\n    }\n    return GridState;\n}());\nexports.GridState = GridState;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar commonCanvasRenderer_1 = require(\"./commonCanvasRenderer\");\nvar gridGeometry_1 = require(\"./gridGeometry\");\nvar ScrollGeometry = __importStar(require(\"./scrollbarGeometry\"));\nvar cellsSelection_1 = require(\"./selectionState/cellsSelection\");\nvar noSelection_1 = require(\"./selectionState/noSelection\");\nvar defaultPosProps = {\n    gridOffset: { x: 0, y: 0 },\n    visibleRect: { left: 0, top: 0, right: 0, bottom: 0, height: 0, width: 0 },\n};\nvar defaultScrollbarProps = {\n    horizontalScrollbarPos: null,\n    verticalScrollbarPos: null,\n};\nvar defaultHoverProps = {\n    hoveredScrollbar: null,\n    autofillHandleIsHovered: false,\n};\nvar colours = {\n    grey: {\n        veryLight: 'hsla(0, 0%, 93%, 1)',\n        light: 'hsla(0, 0%, 83%, 1)',\n    },\n    black: {\n        veryTransparent: 'hsla(0, 0%, 0%, 0.4)',\n        transparent: 'hsla(0, 0%, 0%, 0.55)',\n    },\n    blue: {\n        mediumTransparent: 'hsla(214, 78%, 51%, 0.25)',\n        medium: 'hsla(214, 78%, 51%, 1)',\n        light: 'hsla(214, 93%, 64%, 1)',\n    },\n};\nvar styles = {\n    scrollbar: {\n        defaultFill: colours.black.veryTransparent,\n        hoverFill: colours.black.transparent,\n    },\n    scrollGutters: {\n        fill: colours.grey.veryLight,\n        stroke: colours.grey.light,\n    },\n    selectedCells: {\n        fill: colours.blue.mediumTransparent,\n        stroke: colours.blue.medium,\n    },\n    autofillCells: {\n        stroke: colours.blue.medium,\n    },\n    autofillHandle: {\n        defaultFill: colours.blue.medium,\n        hoverFill: colours.blue.light,\n    },\n};\nvar HighlightCanvasRenderer = /** @class */ (function (_super) {\n    __extends(HighlightCanvasRenderer, _super);\n    function HighlightCanvasRenderer(canvas, basicProps, dpr) {\n        var _this = _super.call(this, canvas, dpr, true) || this;\n        _this.posProps = defaultPosProps;\n        _this.scrollProps = defaultScrollbarProps;\n        _this.hoverProps = defaultHoverProps;\n        _this.selectionProps = {\n            selectionState: new noSelection_1.NoSelection(false),\n        };\n        _this.draw = function () {\n            var context = _this.context;\n            // Clear the higlight layer\n            context.clearRect(0, 0, _this.canvas.width, _this.canvas.height);\n            // Translate the canvas context so that it's covering the visibleRect\n            // (so when we translate it back, what we've drawn is within the bounds of the canvas element)\n            context.translate(-_this.posProps.gridOffset.x, -_this.posProps.gridOffset.y);\n            context.lineCap = 'butt';\n            context.fillStyle = styles.selectedCells.fill;\n            context.strokeStyle = styles.selectedCells.stroke;\n            // Draw edit cursor cell outline\n            var editCursorCell = _this.selectionProps.selectionState.getCursorCell(_this.basicProps.cellBounds);\n            if (editCursorCell) {\n                context.lineWidth = 2;\n                var rect = _this.gridCellCoordToGridPixelCoord(editCursorCell);\n                context.strokeRect(rect.left, rect.top, rect.width, rect.height);\n                context.lineWidth = 1;\n            }\n            // Draw selected cell highlights\n            var selectionRange = _this.selectionProps.selectionState.getSelectionRange(_this.basicProps.cellBounds);\n            if (selectionRange && isSelectionMoreThanOneCell(selectionRange)) {\n                var tl = _this.gridCellCoordToGridPixelCoord(selectionRange.topLeft);\n                var br = _this.gridCellCoordToGridPixelCoord(selectionRange.bottomRight);\n                context.fillRect(tl.left, tl.top, br.right - tl.left, br.bottom - tl.top);\n                context.strokeRect(tl.left, tl.top, br.right - tl.left, br.bottom - tl.top);\n            }\n            if (_this.selectionProps.selectionState instanceof cellsSelection_1.CellsSelection) {\n                if (selectionRange && _this.basicProps.shouldAllowAutofill(selectionRange)) {\n                    // Draw autofill handle\n                    context.fillStyle = _this.hoverProps.autofillHandleIsHovered ?\n                        styles.autofillHandle.hoverFill :\n                        styles.autofillHandle.defaultFill;\n                    var rect = _this.gridCellCoordToGridPixelCoord(selectionRange.bottomRight);\n                    context.fillRect(rect.right - 3, rect.bottom - 3, 6, 6);\n                    context.strokeRect(rect.right - 3, rect.bottom - 3, 6, 6);\n                }\n                var autofillRange = _this.selectionProps.selectionState.getAutofillRange();\n                if (autofillRange) {\n                    var topLeftRect = _this.gridCellCoordToGridPixelCoord(autofillRange.topLeft);\n                    var bottomRightRect = _this.gridCellCoordToGridPixelCoord(autofillRange.bottomRight);\n                    // Draw the currently dragged autofill range\n                    context.strokeStyle = styles.autofillCells.stroke;\n                    context.setLineDash([5, 7]);\n                    context.strokeRect(topLeftRect.left, topLeftRect.top, bottomRightRect.right - topLeftRect.left, bottomRightRect.bottom - topLeftRect.top);\n                    context.setLineDash([]);\n                }\n            }\n            // Translate back, to bring our drawn area into the bounds of the canvas element\n            context.translate(_this.posProps.gridOffset.x, _this.posProps.gridOffset.y);\n            // Draw scrollbar gutters\n            var vBounds = _this.basicProps.verticalGutterBounds;\n            var hBounds = _this.basicProps.horizontalGutterBounds;\n            if (vBounds || hBounds) {\n                _this.context.fillStyle = styles.scrollGutters.fill;\n                if (vBounds) {\n                    _this.context.fillRect(vBounds.left, vBounds.top, vBounds.width, vBounds.height);\n                }\n                if (hBounds) {\n                    _this.context.fillRect(hBounds.left, hBounds.top, hBounds.width, hBounds.height);\n                }\n                _this.context.strokeStyle = styles.scrollGutters.stroke;\n                _this.context.lineWidth = 1;\n                _this.context.beginPath();\n                if (vBounds) {\n                    _this.context.moveTo(vBounds.left, 0);\n                    _this.context.lineTo(vBounds.left, vBounds.height - (hBounds ? hBounds.height : 0));\n                    _this.context.moveTo(vBounds.right, 0);\n                    _this.context.lineTo(vBounds.right, vBounds.height);\n                }\n                if (hBounds) {\n                    _this.context.moveTo(0, hBounds.top);\n                    _this.context.lineTo(hBounds.width - (vBounds ? vBounds.width : 0), hBounds.top);\n                    _this.context.moveTo(0, hBounds.bottom);\n                    _this.context.lineTo(hBounds.width, hBounds.bottom);\n                }\n                _this.context.stroke();\n            }\n            // Set up for drawing scrollbars\n            context.lineCap = 'round';\n            // Draw horizontal scrollbar (if needed)\n            if (_this.scrollProps.horizontalScrollbarPos) {\n                if (_this.hoverProps.hoveredScrollbar === 'x') {\n                    context.strokeStyle = styles.scrollbar.hoverFill;\n                    context.lineWidth = ScrollGeometry.barWidth + 3;\n                }\n                else {\n                    context.strokeStyle = styles.scrollbar.defaultFill;\n                    context.lineWidth = ScrollGeometry.barWidth;\n                }\n                var scrollPos = _this.scrollProps.horizontalScrollbarPos;\n                context.beginPath();\n                context.moveTo(scrollPos.extent.start, scrollPos.transverse);\n                context.lineTo(scrollPos.extent.end, scrollPos.transverse);\n                context.stroke();\n            }\n            // Draw vertical scrollbar (if needed)\n            if (_this.scrollProps.verticalScrollbarPos) {\n                if (_this.hoverProps.hoveredScrollbar === 'y') {\n                    context.strokeStyle = styles.scrollbar.hoverFill;\n                    context.lineWidth = ScrollGeometry.barWidth + 3;\n                }\n                else {\n                    context.strokeStyle = styles.scrollbar.defaultFill;\n                    context.lineWidth = ScrollGeometry.barWidth;\n                }\n                var scrollPos = _this.scrollProps.verticalScrollbarPos;\n                context.beginPath();\n                context.moveTo(scrollPos.transverse, scrollPos.extent.start);\n                context.lineTo(scrollPos.transverse, scrollPos.extent.end);\n                context.stroke();\n            }\n        };\n        _this.gridCellCoordToGridPixelCoord = function (_a) {\n            var x = _a.x, y = _a.y;\n            return gridGeometry_1.GridGeometry.calculateCellBounds(x, y, _this.basicProps.rowHeight, _this.basicProps.borderWidth, _this.basicProps.columnBoundaries);\n        };\n        _this.basicProps = basicProps;\n        return _this;\n    }\n    HighlightCanvasRenderer.prototype.updateProps = function (canvas, basicProps, posProps, scrollProps, hoverProps, selectProps) {\n        if (this.canvas !== canvas) {\n            this.setCanvas(canvas);\n        }\n        this.basicProps = basicProps;\n        this.posProps = posProps;\n        this.scrollProps = scrollProps,\n            this.hoverProps = hoverProps;\n        this.selectionProps = selectProps;\n        this.drawScaled(this.draw);\n    };\n    return HighlightCanvasRenderer;\n}(commonCanvasRenderer_1.CommonCanvasRenderer));\nexports.HighlightCanvasRenderer = HighlightCanvasRenderer;\nfunction isSelectionMoreThanOneCell(selection) {\n    var tl = selection.topLeft;\n    var br = selection.bottomRight;\n    return tl.x !== br.x || tl.y !== br.y;\n}\nfunction shouldSelectionClear(prev, next) {\n    return (prev.columns !== next.columns || prev.data.length !== next.data.length);\n}\nexports.shouldSelectionClear = shouldSelectionClear;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instigator_1 = require(\"instigator\");\nvar React = __importStar(require(\"react\"));\nvar keyboardEvents_1 = require(\"./eventHandlers/keyboardEvents\");\nvar mouseEvents_1 = require(\"./eventHandlers/mouseEvents\");\nvar FrozenCanvas_1 = require(\"./FrozenCanvas\");\nvar gridGeometry_1 = require(\"./gridGeometry\");\nvar gridState_1 = require(\"./gridState\");\nvar HighlightCanvas_1 = require(\"./HighlightCanvas\");\nvar highlightCanvasRenderer_1 = require(\"./highlightCanvasRenderer\");\nvar InlineEditor_1 = require(\"./InlineEditor\");\nvar MainCanvas_1 = require(\"./MainCanvas\");\nvar noSelection_1 = require(\"./selectionState/noSelection\");\nvar types_1 = require(\"./types\");\nvar ReactCanvasGrid = /** @class */ (function (_super) {\n    __extends(ReactCanvasGrid, _super);\n    function ReactCanvasGrid(props) {\n        var _this = _super.call(this, props) || this;\n        _this.rootRef = React.createRef();\n        _this.onWheel = function (e) {\n            mouseEvents_1.handleWheel(e, _this.gridState);\n        };\n        _this.onMouseDown = function (event) {\n            var gridSize = _this.gridState.gridSize();\n            var coord = gridGeometry_1.GridGeometry.calculateComponentPixel(event, _this.rootRef.current);\n            if (coord.x >= gridSize.width || coord.y >= gridSize.height) {\n                // The click happened within the component but outside the grid, so ignore it\n                return;\n            }\n            mouseEvents_1.handleMouseDown(event, coord, _this.rootRef, _this.gridState, _this.props, _this.state.editingCell);\n        };\n        _this.onMouseMove = function (event) {\n            var coord = gridGeometry_1.GridGeometry.calculateComponentPixel(event, _this.rootRef.current);\n            var gridSize = _this.gridState.gridSize();\n            if (coord.x >= gridSize.width || coord.y >= gridSize.height) {\n                // The drag has gone beyond the edge of the grid (even if still in the component), so ignore it\n                return;\n            }\n            mouseEvents_1.handleMouseMove(event, coord, _this.rootRef, _this.gridState, _this.props, _this.state.editingCell);\n        };\n        _this.onMouseUp = function (event) {\n            instigator_1.batch(function () {\n                var coord = gridGeometry_1.GridGeometry.calculateComponentPixel(event, _this.rootRef.current);\n                mouseEvents_1.handleMouseUp(coord, _this.gridState, _this.props, _this.state.editingCell);\n            });\n        };\n        _this.onDoubleClick = function (event) {\n            var cellCoords = gridGeometry_1.GridGeometry.calculateGridCellCoordsFromGridState(event, _this.rootRef.current, _this.gridState);\n            _this.startEditingCell(cellCoords);\n        };\n        _this.onKeyDown = function (event) {\n            if (!_this.state.editingCell) {\n                keyboardEvents_1.keyDownOnGrid(event, _this.props, _this.gridState);\n            }\n        };\n        _this.startEditingCell = function (cellCoords) {\n            var cellBounds = gridGeometry_1.GridGeometry.calculateCellBounds(cellCoords.x, cellCoords.y, _this.props.rowHeight, _this.props.borderWidth, _this.gridState.columnBoundaries());\n            var col = _this.props.columns[cellCoords.x];\n            var cell = _this.props.data[cellCoords.y][col.fieldName];\n            if (!types_1.cellIsEditable(cell)) {\n                return;\n            }\n            _this.setState({\n                editingCell: __assign({ cell: cell, colIndex: cellCoords.x, rowIndex: cellCoords.y }, cellBounds, { fieldName: col.fieldName }),\n            });\n        };\n        _this.cancelEditingCell = function () {\n            _this.setState({ editingCell: null }, _this.focusRoot);\n        };\n        _this.stopEditingCell = function (newData) {\n            if (_this.state.editingCell === null) {\n                return;\n            }\n            if (_this.props.onCellDataChanged) {\n                _this.props.onCellDataChanged({\n                    cell: _this.state.editingCell.cell,\n                    colIndex: _this.state.editingCell.colIndex,\n                    rowIndex: _this.state.editingCell.rowIndex,\n                    fieldName: _this.state.editingCell.fieldName,\n                    newData: newData,\n                });\n            }\n            _this.setState({ editingCell: null }, _this.focusRoot);\n        };\n        _this.focusRoot = function () {\n            if (_this.rootRef.current) {\n                _this.rootRef.current.focus({ preventScroll: true });\n            }\n        };\n        _this.gridState = new gridState_1.GridState(props.columns, props.data, props.rowHeight, props.borderWidth, props.frozenRows, props.frozenCols, props.shouldAllowAutofill);\n        _this.state = {\n            rootSize: null,\n            gridOffset: _this.gridState.gridOffset(),\n            editingCell: null,\n            cursorType: 'default',\n        };\n        return _this;\n    }\n    ReactCanvasGrid.prototype.componentDidMount = function () {\n        var _this = this;\n        if (!this.rootRef.current) {\n            throw new Error('root element ref not set in componentDidMount, so cannot determine canvas size');\n        }\n        var rootRect = this.rootRef.current.getBoundingClientRect();\n        this.rootRef.current.addEventListener('wheel', this.onWheel);\n        window.addEventListener('mousemove', this.onMouseMove);\n        window.addEventListener('mouseup', this.onMouseUp);\n        // Set the rootSize, causing a re-render, at which point the canvases will be properly sized.\n        // Once the state has been set and everything has re-rendered, we can set the rootSize, causing\n        // the renderers to redraw.\n        this.setState({ rootSize: { width: rootRect.width, height: rootRect.height } }, function () {\n            _this.gridState.rootSize({ width: rootRect.width, height: rootRect.height });\n        });\n        // Keep the gridState gridOffset and the React state gridOffset in sync\n        instigator_1.consumer([this.gridState.gridOffset], function (gridOffset) { return _this.setState({ gridOffset: gridOffset }); });\n        // Keep the gridState cursorType and the React state cursorType in sync\n        instigator_1.consumer([this.gridState.cursorType], function (cursorType) { return _this.setState({ cursorType: cursorType }); });\n    };\n    ReactCanvasGrid.prototype.componentDidUpdate = function (prevProps) {\n        var _this = this;\n        if (!this.rootRef.current) {\n            throw new Error('root element ref not set in componentDidMount, so cannot determine canvas size');\n        }\n        var rootRect = this.rootRef.current.getBoundingClientRect();\n        instigator_1.batch(function () {\n            _this.gridState.columns(_this.props.columns);\n            _this.gridState.data(_this.props.data);\n            _this.gridState.rowHeight(_this.props.rowHeight);\n            _this.gridState.borderWidth(_this.props.borderWidth);\n            _this.gridState.frozenRows(_this.props.frozenRows);\n            _this.gridState.frozenCols(_this.props.frozenCols);\n            _this.gridState.rootSize({ width: rootRect.width, height: rootRect.height });\n            _this.gridState.shouldAllowAutofill(_this.props.shouldAllowAutofill);\n            if (highlightCanvasRenderer_1.shouldSelectionClear(prevProps, _this.props)) {\n                _this.gridState.selectionState(new noSelection_1.NoSelection(false));\n                if (_this.props.onSelectionCleared) {\n                    _this.props.onSelectionCleared();\n                }\n            }\n            var gridSize = _this.gridState.gridSize();\n            var canvasSize = _this.gridState.canvasSize();\n            var truncatedOffset = gridGeometry_1.GridGeometry.truncateGridOffset(_this.gridState.gridOffset(), gridSize, canvasSize);\n            if (truncatedOffset) {\n                _this.gridState.gridOffsetRaw(truncatedOffset);\n            }\n            if (_this.props.focusedColIndex !== null && _this.props.focusedColIndex !== prevProps.focusedColIndex) {\n                var focusedOffset = gridGeometry_1.GridGeometry.calculateGridOffsetForTargetColumn(_this.gridState.gridOffset(), canvasSize, _this.gridState.frozenColsWidth(), _this.props.focusedColIndex, _this.gridState.columnBoundaries(), _this.gridState.verticalGutterBounds());\n                _this.gridState.gridOffsetRaw(focusedOffset);\n            }\n        });\n    };\n    ReactCanvasGrid.prototype.componentWillUnmount = function () {\n        if (this.rootRef.current) {\n            this.rootRef.current.removeEventListener('wheel', this.onWheel);\n        }\n        window.removeEventListener('mousemove', this.onMouseMove);\n        window.removeEventListener('mouseup', this.onMouseUp);\n    };\n    ReactCanvasGrid.prototype.render = function () {\n        // Since we're rendering, the props have just changed. The values in gridState won't update until\n        // componentDidMount is run, however, so we can't use them, and have to calculate fresh values\n        // here in render and throw them away. Props changes should be rare, and unlikely to be extremely\n        // performance sensitive, so this probably won't cause noticeable problems.\n        var columnBoundaries = gridGeometry_1.GridGeometry.calculateColumnBoundaries(this.props.columns, this.props.borderWidth);\n        var gridSize = gridGeometry_1.GridGeometry.calculateGridSize(this.props.data, columnBoundaries, this.props.rowHeight, this.props.borderWidth);\n        var gridPlusGutterSize = gridGeometry_1.GridGeometry.calculateGridPlusGutterSize(gridSize, this.state.rootSize);\n        var canvasSize = gridGeometry_1.GridGeometry.calculateCanvasSize(gridPlusGutterSize, this.state.rootSize);\n        var frozenColsWidth = gridGeometry_1.GridGeometry.calculateFrozenColsWidth(columnBoundaries, this.props.frozenCols, this.props.borderWidth);\n        var frozenRowsHeight = gridGeometry_1.GridGeometry.calculateFrozenRowsHeight(this.props.rowHeight, this.props.borderWidth, this.props.frozenRows);\n        return (React.createElement(\"div\", { ref: this.rootRef, className: \"react-canvas-grid\", onMouseDown: this.onMouseDown, onDoubleClick: this.onDoubleClick, onKeyDown: this.onKeyDown, tabIndex: 1, style: {\n                position: 'relative',\n                width: this.props.cssWidth,\n                height: this.props.cssHeight,\n                overflow: 'hidden',\n                outline: 'none',\n                cursor: this.state.cursorType,\n            } },\n            React.createElement(MainCanvas_1.MainCanvas, { width: canvasSize.width, height: canvasSize.height, frozenColsWidth: frozenColsWidth, frozenRowsHeight: frozenRowsHeight, gridState: this.gridState }),\n            React.createElement(HighlightCanvas_1.HighlightCanvas, { width: canvasSize.width, height: canvasSize.height, gridState: this.gridState }),\n            this.state.editingCell &&\n                React.createElement(InlineEditor_1.InlineTextEditor, { cell: this.state.editingCell.cell, left: this.state.editingCell.left, top: this.state.editingCell.top, width: this.state.editingCell.width, height: this.state.editingCell.height, gridOffset: this.state.gridOffset, onSubmit: this.stopEditingCell, onCancel: this.cancelEditingCell }),\n            React.createElement(FrozenCanvas_1.FrozenCanvas, { width: canvasSize.width, height: canvasSize.height, frozenColsWidth: frozenColsWidth, frozenRowsHeight: frozenRowsHeight, gridState: this.gridState })));\n    };\n    ReactCanvasGrid.defaultProps = {\n        cssWidth: '100%',\n        cssHeight: '100%',\n        borderWidth: 1,\n        frozenRows: 0,\n        frozenCols: 0,\n        focusedColIndex: null,\n        shouldAllowAutofill: function () { return false; },\n    };\n    return ReactCanvasGrid;\n}(React.PureComponent));\nexports.ReactCanvasGrid = ReactCanvasGrid;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils\");\nexports.keyDownOnGrid = function (event, props, gridState) {\n    var selectionState = gridState.selectionState();\n    // Find the appropriate method to call on the selection state\n    var actions = {\n        ArrowRight: { shift: selectionState.shiftArrowRight, noShift: selectionState.arrowRight },\n        ArrowLeft: { shift: selectionState.shiftArrowLeft, noShift: selectionState.arrowLeft },\n        ArrowUp: { shift: selectionState.shiftArrowUp, noShift: selectionState.arrowUp },\n        ArrowDown: { shift: selectionState.shiftArrowDown, noShift: selectionState.arrowDown },\n    };\n    var selectionArrowActions = actions[event.key];\n    if (!selectionArrowActions) {\n        return;\n    }\n    var selectionArrowAction = selectionArrowActions[event.shiftKey ? 'shift' : 'noShift'];\n    var cellBounds = gridState.cellBounds();\n    // Create the new state\n    var newSelState = selectionArrowAction(cellBounds);\n    var selectionRange = newSelState.getSelectionRange(cellBounds);\n    var newOffset = newSelState.getFocusGridOffset(gridState);\n    var oldSelectionRange = selectionState.getSelectionRange(cellBounds);\n    if (selectionRange !== null && newOffset !== null && !utils_1.equalSelectRange(oldSelectionRange, selectionRange)) {\n        // Start / update prop callback\n        var onStartOrUpdate = event.shiftKey ? props.onSelectionChangeUpdate : props.onSelectionChangeStart;\n        if (onStartOrUpdate) {\n            onStartOrUpdate(selectionRange);\n        }\n        // Scroll\n        gridState.gridOffsetRaw(newOffset);\n        // End prop callback\n        if (props.onSelectionChangeEnd) {\n            props.onSelectionChangeEnd(selectionRange);\n        }\n        // Update selection state\n        gridState.selectionState(newSelState);\n        // Prevent the arrow key from scrolling the page (as we've scrolled in the grid instead)\n        event.preventDefault();\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridGeometry_1 = require(\"../gridGeometry\");\nvar cellsSelection_1 = require(\"../selectionState/cellsSelection\");\nexports.mouseDownOnAutofillHandle = function (event, gridState, rootRef) {\n    var selectionState = gridState.selectionState();\n    if (!(selectionState instanceof cellsSelection_1.CellsSelection)) {\n        return false;\n    }\n    var selectionRange = selectionState.getSelectionRange();\n    var shouldAllowAutofill = gridState.shouldAllowAutofill();\n    if (!shouldAllowAutofill(selectionRange)) {\n        return false;\n    }\n    var isHandleHit = isOverAutofillHandle(selectionState, event, gridState, rootRef);\n    if (isHandleHit) {\n        // Start tracking autofill drag\n        var newSelState = selectionState.mouseDownOnAutofillHandle();\n        gridState.selectionState(newSelState);\n        return true;\n    }\n    else {\n        return false;\n    }\n};\nexports.mouseHoverOnAutofillHandle = function (event, gridState, rootRef) {\n    var selectionState = gridState.selectionState();\n    if (selectionState instanceof cellsSelection_1.CellsSelection) {\n        var selectionRange = selectionState.getSelectionRange();\n        var shouldAllowAutofill = gridState.shouldAllowAutofill();\n        if (shouldAllowAutofill(selectionRange)) {\n            var isHandleHit = isOverAutofillHandle(selectionState, event, gridState, rootRef);\n            if (isHandleHit) {\n                gridState.autofillHandleIsHovered(true);\n                return true;\n            }\n        }\n    }\n    gridState.autofillHandleIsHovered(false);\n    return false;\n};\nvar isOverAutofillHandle = function (selectionState, event, gridState, rootRef) {\n    var selectionRange = selectionState.getSelectionRange();\n    var bottomRightCellBounds = gridGeometry_1.GridGeometry.calculateCellBounds(selectionRange.bottomRight.x, selectionRange.bottomRight.y, gridState.rowHeight(), gridState.borderWidth(), gridState.columnBoundaries());\n    var gridPixelCoord = gridGeometry_1.GridGeometry.calculateGridPixelCoords(event, gridState.gridOffset(), rootRef.current);\n    var dx = gridPixelCoord.x - bottomRightCellBounds.right;\n    var dy = gridPixelCoord.y - bottomRightCellBounds.bottom;\n    return Math.abs(dx) <= 3 && Math.abs(dy) <= 3;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridGeometry_1 = require(\"../gridGeometry\");\nfunction calculateGridOffsetForTargetCell(gridState, focusCell) {\n    return gridGeometry_1.GridGeometry.calculateGridOffsetForTargetCell(gridState.gridOffset(), gridState.canvasSize(), gridState.frozenColsWidth(), gridState.frozenRowsHeight(), focusCell, gridState.columnBoundaries(), gridState.rowHeight(), gridState.borderWidth(), gridState.data().length, gridState.verticalGutterBounds(), gridState.horizontalGutterBounds());\n}\nexports.calculateGridOffsetForTargetCell = calculateGridOffsetForTargetCell;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar selectionState_1 = require(\"./selectionState\");\nvar selectionStateFactory_1 = require(\"./selectionStateFactory\");\nvar AllGridSelection = /** @class */ (function (_super) {\n    __extends(AllGridSelection, _super);\n    function AllGridSelection() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.arrowUp = function (_) { return _this; };\n        _this.arrowDown = function (_) { return _this; };\n        _this.arrowLeft = function (_) { return _this; };\n        _this.arrowRight = function (_) { return _this; };\n        _this.shiftArrowUp = function (_) { return _this; };\n        _this.shiftArrowDown = function (_) { return _this; };\n        _this.shiftArrowLeft = function (_) { return _this; };\n        _this.shiftArrowRight = function (_) { return _this; };\n        _this.mouseMove = function () { return _this; };\n        _this.mouseUp = function () {\n            if (!_this.isSelectionInProgress) {\n                return _this;\n            }\n            else {\n                return new AllGridSelection(false);\n            }\n        };\n        _this.mouseDown = function (cell, meta) { return selectionStateFactory_1.createSelectionStateForMouseDown(cell, meta); };\n        _this.shiftMouseDown = function (cell, meta) {\n            return _this.mouseDown(cell, meta);\n        };\n        _this.getSelectionRange = function (cellBounds) {\n            return {\n                topLeft: {\n                    x: cellBounds.frozenCols,\n                    y: cellBounds.frozenRows,\n                },\n                bottomRight: {\n                    x: cellBounds.numCols - 1,\n                    y: cellBounds.numRows - 1,\n                },\n            };\n        };\n        _this.getCursorCell = function (cellBounds) { return ({\n            x: cellBounds.frozenCols,\n            y: cellBounds.frozenRows,\n        }); };\n        _this.getFocusGridOffset = function (_) { return null; };\n        return _this;\n    }\n    return AllGridSelection;\n}(selectionState_1.BaseSelectionState));\nexports.AllGridSelection = AllGridSelection;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridGeometry_1 = require(\"../gridGeometry\");\nvar selectionState_1 = require(\"./selectionState\");\nvar selectionStateFactory_1 = require(\"./selectionStateFactory\");\nvar ColsSelection = /** @class */ (function (_super) {\n    __extends(ColsSelection, _super);\n    function ColsSelection(editCursorCell, selectionStartColIndex, selectionCursorColIndex, isSelectionInProgress, focusColIndex) {\n        var _this = _super.call(this, isSelectionInProgress) || this;\n        _this.arrowUp = function () {\n            return _this;\n        };\n        _this.arrowDown = function () {\n            return _this;\n        };\n        _this.arrowLeft = function (cellBounds) {\n            var newCell = { x: truncateCol(_this.editCursorCell.x - 1, cellBounds), y: _this.editCursorCell.y };\n            return new ColsSelection(newCell, newCell.x, newCell.x, false, newCell.x);\n        };\n        _this.arrowRight = function (cellBounds) {\n            var newCell = { x: truncateCol(_this.editCursorCell.x + 1, cellBounds), y: _this.editCursorCell.y };\n            return new ColsSelection(newCell, newCell.x, newCell.x, false, newCell.x);\n        };\n        _this.shiftArrowUp = function () {\n            return _this;\n        };\n        _this.shiftArrowDown = function () {\n            return _this;\n        };\n        _this.shiftArrowLeft = function (cellBounds) {\n            var newColIndex = truncateCol(_this.selectionCursorColIndex - 1, cellBounds);\n            return new ColsSelection(_this.editCursorCell, _this.selectionStartColIndex, newColIndex, false, newColIndex);\n        };\n        _this.shiftArrowRight = function (cellBounds) {\n            var neColIndex = truncateCol(_this.selectionCursorColIndex + 1, cellBounds);\n            return new ColsSelection(_this.editCursorCell, _this.selectionStartColIndex, neColIndex, false, neColIndex);\n        };\n        _this.mouseDown = function (cell, meta) { return selectionStateFactory_1.createSelectionStateForMouseDown(cell, meta); };\n        _this.shiftMouseDown = function (cell, meta) {\n            if (meta.region !== 'frozen-rows') {\n                return _this;\n            }\n            return new ColsSelection(_this.editCursorCell, _this.selectionStartColIndex, cell.x, true, cell.x);\n        };\n        _this.mouseMove = function (cell) {\n            if (_this.isSelectionInProgress && cell.x !== _this.selectionCursorColIndex) {\n                return new ColsSelection(_this.editCursorCell, _this.selectionStartColIndex, cell.x, true, cell.x);\n            }\n            else {\n                return _this;\n            }\n        };\n        _this.mouseUp = function () {\n            if (!_this.isSelectionInProgress) {\n                return _this;\n            }\n            else {\n                return new ColsSelection(_this.editCursorCell, _this.selectionStartColIndex, _this.selectionCursorColIndex, false, _this.selectionCursorColIndex);\n            }\n        };\n        _this.getSelectionRange = function (cellBounds) {\n            return {\n                topLeft: {\n                    x: Math.min(_this.selectionStartColIndex, _this.selectionCursorColIndex),\n                    y: cellBounds.frozenRows,\n                },\n                bottomRight: {\n                    x: Math.max(_this.selectionStartColIndex, _this.selectionCursorColIndex),\n                    y: cellBounds.numRows - 1,\n                },\n            };\n        };\n        _this.getFocusGridOffset = function (gridState) {\n            return gridGeometry_1.GridGeometry.calculateGridOffsetForTargetColumn(gridState.gridOffset(), gridState.canvasSize(), gridState.frozenColsWidth(), _this.focusColIndex, gridState.columnBoundaries(), gridState.verticalGutterBounds());\n        };\n        _this.getCursorCell = function () { return _this.editCursorCell; };\n        _this.editCursorCell = editCursorCell;\n        _this.selectionStartColIndex = selectionStartColIndex;\n        _this.selectionCursorColIndex = selectionCursorColIndex;\n        _this.focusColIndex = focusColIndex;\n        return _this;\n    }\n    return ColsSelection;\n}(selectionState_1.BaseSelectionState));\nexports.ColsSelection = ColsSelection;\nvar truncateCol = function (colIndex, cellBounds) {\n    return Math.min(Math.max(colIndex, cellBounds.frozenCols), cellBounds.numCols - 1);\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridGeometry_1 = require(\"../gridGeometry\");\nvar selectionState_1 = require(\"./selectionState\");\nvar selectionStateFactory_1 = require(\"./selectionStateFactory\");\nvar RowsSelection = /** @class */ (function (_super) {\n    __extends(RowsSelection, _super);\n    function RowsSelection(editCursorCell, selectionStartRowIndex, selectionCursorRowIndex, isSelectionInProgress, focusRowIndex) {\n        var _this = _super.call(this, isSelectionInProgress) || this;\n        _this.arrowUp = function (cellBounds) {\n            var newCell = { x: _this.editCursorCell.x, y: truncateRow(_this.editCursorCell.y - 1, cellBounds) };\n            return new RowsSelection(newCell, newCell.y, newCell.y, false, newCell.y);\n        };\n        _this.arrowDown = function (cellBounds) {\n            var newCell = { x: _this.editCursorCell.x, y: truncateRow(_this.editCursorCell.y + 1, cellBounds) };\n            return new RowsSelection(newCell, newCell.y, newCell.y, false, newCell.y);\n        };\n        _this.arrowLeft = function () {\n            return _this;\n        };\n        _this.arrowRight = function () {\n            return _this;\n        };\n        _this.shiftArrowUp = function (cellBounds) {\n            var newRowIndex = truncateRow(_this.selectionCursorRowIndex - 1, cellBounds);\n            return new RowsSelection(_this.editCursorCell, _this.selectionStartRowIndex, newRowIndex, false, newRowIndex);\n        };\n        _this.shiftArrowDown = function (cellBounds) {\n            var newRowIndex = truncateRow(_this.selectionCursorRowIndex + 1, cellBounds);\n            return new RowsSelection(_this.editCursorCell, _this.selectionStartRowIndex, newRowIndex, false, newRowIndex);\n        };\n        _this.shiftArrowLeft = function () {\n            return _this;\n        };\n        _this.shiftArrowRight = function () {\n            return _this;\n        };\n        _this.mouseDown = function (cell, meta) { return selectionStateFactory_1.createSelectionStateForMouseDown(cell, meta); };\n        _this.shiftMouseDown = function (cell, meta) {\n            if (meta.region !== 'frozen-cols') {\n                return _this;\n            }\n            return new RowsSelection(_this.editCursorCell, _this.selectionStartRowIndex, cell.y, true, cell.y);\n        };\n        _this.mouseMove = function (cell) {\n            if (_this.isSelectionInProgress && cell.y !== _this.selectionCursorRowIndex) {\n                return new RowsSelection(_this.editCursorCell, _this.selectionStartRowIndex, cell.y, true, cell.y);\n            }\n            else {\n                return _this;\n            }\n        };\n        _this.mouseUp = function () {\n            if (!_this.isSelectionInProgress) {\n                return _this;\n            }\n            else {\n                return new RowsSelection(_this.editCursorCell, _this.selectionStartRowIndex, _this.selectionCursorRowIndex, false, _this.selectionCursorRowIndex);\n            }\n        };\n        _this.getSelectionRange = function (cellBounds) {\n            return {\n                topLeft: {\n                    x: cellBounds.frozenCols,\n                    y: Math.min(_this.selectionStartRowIndex, _this.selectionCursorRowIndex),\n                },\n                bottomRight: {\n                    x: cellBounds.numCols - 1,\n                    y: Math.max(_this.selectionStartRowIndex, _this.selectionCursorRowIndex),\n                },\n            };\n        };\n        _this.getFocusGridOffset = function (gridState) {\n            return gridGeometry_1.GridGeometry.calculateGridOffsetForTargetRow(gridState.gridOffset(), gridState.canvasSize(), gridState.frozenRowsHeight(), _this.focusRowIndex, gridState.rowHeight(), gridState.borderWidth(), gridState.data().length, gridState.horizontalGutterBounds());\n        };\n        _this.getCursorCell = function () { return _this.editCursorCell; };\n        _this.editCursorCell = editCursorCell;\n        _this.selectionStartRowIndex = selectionStartRowIndex;\n        _this.selectionCursorRowIndex = selectionCursorRowIndex;\n        _this.focusRowIndex = focusRowIndex;\n        return _this;\n    }\n    return RowsSelection;\n}(selectionState_1.BaseSelectionState));\nexports.RowsSelection = RowsSelection;\nvar truncateRow = function (rowIndex, cellBounds) {\n    return Math.min(Math.max(rowIndex, cellBounds.frozenRows), cellBounds.numRows - 1);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridGeometry_1 = require(\"../gridGeometry\");\nvar cellsSelection_1 = require(\"../selectionState/cellsSelection\");\nvar noSelection_1 = require(\"../selectionState/noSelection\");\nvar mouseCellAndRegionCalc_1 = require(\"./mouseCellAndRegionCalc\");\nvar mouseEvents_1 = require(\"./mouseEvents\");\nvar scrollingTimer_1 = require(\"./scrollingTimer\");\nexports.mouseDownOnGrid = function (event, componentPixelCoord, rootRef, props, gridState, editingCell) {\n    if (!mouseEvents_1.isLeftButton(event)) {\n        return;\n    }\n    if (editingCell !== null) {\n        // We're editing a cell, so ignore clicks on grid\n        return;\n    }\n    var _a = mouseCellAndRegionCalc_1.getMouseCellCoordAndRegion(event, componentPixelCoord, rootRef, props, gridState), truncatedCoord = _a.truncatedCoord, region = _a.region;\n    // Now we can process the click and update the selection state\n    var selectionState = gridState.selectionState();\n    var process = event.shiftKey ? selectionState.shiftMouseDown : selectionState.mouseDown;\n    var callback = event.shiftKey && !(selectionState instanceof noSelection_1.NoSelection) ?\n        props.onSelectionChangeUpdate :\n        props.onSelectionChangeStart;\n    var newSelState = process(truncatedCoord, { region: region });\n    if (selectionState !== newSelState) {\n        if (callback) {\n            callback(newSelState.getSelectionRange(gridState.cellBounds()));\n        }\n        gridState.selectionState(newSelState);\n    }\n};\nexports.mouseDragOnGrid = function (event, rootRef, props, gridState, editingCell) {\n    if (!mouseEvents_1.isLeftButton(event)) {\n        return false;\n    }\n    if (editingCell !== null) {\n        // We're editing a cell, so ignore grid drags\n        return false;\n    }\n    var selectionState = gridState.selectionState();\n    if (!selectionState.isSelectionInProgress) {\n        // We're not dragging anything, so ignore the mouse move\n        return false;\n    }\n    var componentPixelCoord = gridGeometry_1.GridGeometry.calculateComponentPixel(event, rootRef.current);\n    var recalculateAndUpdateSelection = function () {\n        var truncatedCoord = mouseCellAndRegionCalc_1.getMouseCellCoordAndRegion(event, componentPixelCoord, rootRef, props, gridState).truncatedCoord;\n        // Now we can process the click and update the selection state\n        var newSelState = selectionState.mouseMove(truncatedCoord);\n        var selectionRange = newSelState.getSelectionRange(gridState.cellBounds());\n        if (selectionState !== newSelState && selectionRange !== null) {\n            if (props.onSelectionChangeUpdate) {\n                props.onSelectionChangeUpdate(selectionRange);\n            }\n            gridState.selectionState(newSelState);\n        }\n    };\n    scrollingTimer_1.startScrollBySelectionDragIfNeeded(gridState, componentPixelCoord, recalculateAndUpdateSelection);\n    recalculateAndUpdateSelection();\n    return true;\n};\nexports.mouseUpOnGrid = function (props, gridState, editingCell) {\n    scrollingTimer_1.clearScrollByDragTimer();\n    if (editingCell !== null) {\n        // We're editing a cell, so ignore grid clicks\n        return;\n    }\n    var selectionState = gridState.selectionState();\n    if (!selectionState.isSelectionInProgress) {\n        return;\n    }\n    var newSelState = selectionState.mouseUp();\n    if (selectionState !== newSelState) {\n        if (props.onSelectionChangeEnd) {\n            props.onSelectionChangeEnd(newSelState.getSelectionRange(gridState.cellBounds()));\n        }\n        gridState.selectionState(newSelState);\n    }\n    if (selectionState instanceof cellsSelection_1.CellsSelection && selectionState.isAutofillDragging() &&\n        newSelState instanceof cellsSelection_1.CellsSelection && !newSelState.isAutofillDragging()) {\n        var rangeToFill = selectionState.getAutofillRange();\n        if (rangeToFill && props.onAutofill) {\n            props.onAutofill(selectionState.getSelectionRange(), rangeToFill);\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridGeometry_1 = require(\"../gridGeometry\");\nexports.getMouseCellCoordAndRegion = function (event, componentPixelCoord, rootRef, props, gridState) {\n    // Find the cell coordinates of the mouse event. This is untruncated, and ignoring frozen cell overlays\n    var gridCoords = gridGeometry_1.GridGeometry.calculateGridCellCoordsFromGridState(event, rootRef.current, gridState);\n    // Figure out if the mouse event is in a frozen cell to determine the region\n    var clickInFrozenCols = componentPixelCoord.x < gridState.frozenColsWidth();\n    var clickInFrozenRows = componentPixelCoord.y < gridState.frozenRowsHeight();\n    var region = clickInFrozenCols ?\n        (clickInFrozenRows ? 'frozen-corner' : 'frozen-cols') :\n        (clickInFrozenRows ? 'frozen-rows' : 'cells');\n    // If the mouse event was on a frozen cell, the gridCoords will be for the cell coords 'underneath' the\n    // frozen cell, so we need to update to coordinate to zero\n    switch (region) {\n        case 'frozen-corner':\n            gridCoords.x = 0;\n            gridCoords.y = 0;\n            break;\n        case 'frozen-rows':\n            gridCoords.y = 0;\n            break;\n        case 'frozen-cols':\n            gridCoords.x = 0;\n            break;\n    }\n    // The mouse event may be beyond the grid's actual size, so we need to truncate it (to avoid selections that\n    // include fictional cells)\n    return {\n        truncatedCoord: truncateCoord(gridCoords, props),\n        region: region,\n    };\n};\nvar truncateCoord = function (coord, props) {\n    return {\n        x: Math.min(Math.max(coord.x, props.frozenCols), props.columns.length - 1),\n        y: Math.min(Math.max(coord.y, props.frozenRows), props.data.length - 1),\n    };\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar scrolling_1 = require(\"./scrolling\");\nvar scrollBySelectionDragTimerId = null;\nexports.clearScrollByDragTimer = function () {\n    if (scrollBySelectionDragTimerId) {\n        clearInterval(scrollBySelectionDragTimerId);\n        scrollBySelectionDragTimerId = null;\n    }\n};\nexports.startScrollBySelectionDragIfNeeded = function (gridState, componentPixelCoord, updateSelection, options) {\n    if (options === void 0) { options = {}; }\n    var rootSize = gridState.rootSize();\n    if (!rootSize) {\n        return;\n    }\n    // Clear any old scroll timer - the mouse pos has changed, so we'll set up a new timer if needed\n    exports.clearScrollByDragTimer();\n    var deltaX = 0;\n    if (options.suppressX !== true) {\n        if (componentPixelCoord.x < 10) {\n            deltaX = -15;\n        }\n        else if (componentPixelCoord.x < 20) {\n            deltaX = -10;\n        }\n        else if (componentPixelCoord.x < 40) {\n            deltaX = -5;\n        }\n        else if (componentPixelCoord.x < 50) {\n            deltaX = -1;\n        }\n        else if (componentPixelCoord.x > rootSize.width - 10) {\n            deltaX = 15;\n        }\n        else if (componentPixelCoord.x > rootSize.width - 20) {\n            deltaX = 10;\n        }\n        else if (componentPixelCoord.x > rootSize.width - 40) {\n            deltaX = 5;\n        }\n        else if (componentPixelCoord.x > rootSize.width - 50) {\n            deltaX = 1;\n        }\n    }\n    var deltaY = 0;\n    if (options.suppressY !== true) {\n        if (componentPixelCoord.y < 10) {\n            deltaY = -15;\n        }\n        else if (componentPixelCoord.y < 20) {\n            deltaY = -10;\n        }\n        else if (componentPixelCoord.y < 40) {\n            deltaY = -5;\n        }\n        else if (componentPixelCoord.y < 50) {\n            deltaY = -1;\n        }\n        else if (componentPixelCoord.y > rootSize.height - 10) {\n            deltaY = 15;\n        }\n        else if (componentPixelCoord.y > rootSize.height - 20) {\n            deltaY = 10;\n        }\n        else if (componentPixelCoord.y > rootSize.height - 40) {\n            deltaY = 5;\n        }\n        else if (componentPixelCoord.y > rootSize.height - 50) {\n            deltaY = 1;\n        }\n    }\n    if (deltaX !== 0 || deltaY !== 0) {\n        var updateOffsetByDeltaAndUpdateSelection = function () {\n            scrolling_1.updateOffsetByDelta(deltaX, deltaY, gridState);\n            updateSelection();\n        };\n        scrollBySelectionDragTimerId = setInterval(updateOffsetByDeltaAndUpdateSelection, 10);\n        scrolling_1.updateOffsetByDelta(deltaX, deltaY, gridState);\n    }\n};\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridGeometry_1 = require(\"../gridGeometry\");\nvar ScrollbarGeometry = __importStar(require(\"../scrollbarGeometry\"));\nvar draggedScrollbar = null;\nexports.mouseDownOnScrollbar = function (coord, gridState) {\n    var hitScrollbar = ScrollbarGeometry.getHitScrollBar(coord, gridState.horizontalScrollbarPos(), gridState.verticalScrollbarPos());\n    if (hitScrollbar) {\n        draggedScrollbar = {\n            bar: hitScrollbar,\n            origScrollbarStart: hitScrollbar === 'x' ?\n                gridState.horizontalScrollbarPos().extent.start :\n                gridState.verticalScrollbarPos().extent.start,\n            origClick: hitScrollbar === 'x' ? coord.x : coord.y,\n        };\n        return true;\n    }\n    else {\n        return false;\n    }\n};\nexports.mouseDragOnScrollbar = function (coord, gridState) {\n    if (!draggedScrollbar) {\n        return false;\n    }\n    var values = draggedScrollbar.bar === 'x' ?\n        {\n            frozenLen: gridState.frozenColsWidth(),\n            canvasLen: gridState.canvasSize().width,\n            gridLen: gridState.gridSize().width,\n            barLen: gridState.horizontalScrollbarLength(),\n            clickCoord: coord.x,\n        } :\n        {\n            frozenLen: gridState.frozenRowsHeight(),\n            canvasLen: gridState.canvasSize().height,\n            gridLen: gridState.gridSize().height,\n            barLen: gridState.verticalScrollbarLength(),\n            clickCoord: coord.y,\n        };\n    var dragDistance = values.clickCoord - draggedScrollbar.origClick;\n    var desiredStart = draggedScrollbar.origScrollbarStart + dragDistance;\n    var desiredFraction = ScrollbarGeometry.calculateFractionFromStartPos(desiredStart, values.frozenLen, values.canvasLen, values.barLen);\n    var newOffset = gridGeometry_1.GridGeometry.calculateGridOffsetFromFraction(desiredFraction, values.gridLen, values.canvasLen);\n    if (draggedScrollbar.bar === 'x') {\n        gridState.gridOffsetRaw({ x: newOffset, y: gridState.gridOffset().y });\n    }\n    else {\n        gridState.gridOffsetRaw({ x: gridState.gridOffset().x, y: newOffset });\n    }\n    return true;\n};\nexports.mouseHoverOnScrollbar = function (coord, gridState) {\n    var hoveredScrollbar = ScrollbarGeometry.getHitScrollBar(coord, gridState.horizontalScrollbarPos(), gridState.verticalScrollbarPos());\n    gridState.hoveredScrollbar(hoveredScrollbar);\n};\nexports.mouseUpOnScrollbar = function () {\n    if (draggedScrollbar) {\n        draggedScrollbar = null;\n        return true;\n    }\n    else {\n        return false;\n    }\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar FrozenColsCanvas_1 = require(\"./FrozenColsCanvas\");\nvar FrozenCornerCanvas_1 = require(\"./FrozenCornerCanvas\");\nvar FrozenRowsCanvas_1 = require(\"./FrozenRowsCanvas\");\nvar FrozenCanvas = /** @class */ (function (_super) {\n    __extends(FrozenCanvas, _super);\n    function FrozenCanvas() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FrozenCanvas.prototype.render = function () {\n        return (React.createElement(React.Fragment, null,\n            (this.props.frozenRowsHeight > 0 && this.props.frozenColsWidth > 0) &&\n                React.createElement(FrozenCornerCanvas_1.FrozenCornerCanvas, __assign({}, this.props)),\n            this.props.frozenRowsHeight > 0 &&\n                React.createElement(FrozenRowsCanvas_1.FrozenRowsCanvas, __assign({}, this.props)),\n            this.props.frozenColsWidth > 0 &&\n                React.createElement(FrozenColsCanvas_1.FrozenColsCanvas, __assign({}, this.props))));\n    };\n    return FrozenCanvas;\n}(React.Component));\nexports.FrozenCanvas = FrozenCanvas;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instigator_1 = require(\"instigator\");\nvar React = __importStar(require(\"react\"));\nvar GridCanvas_1 = require(\"./GridCanvas\");\nvar FrozenColsCanvas = /** @class */ (function (_super) {\n    __extends(FrozenColsCanvas, _super);\n    function FrozenColsCanvas(props) {\n        var _this = _super.call(this, props) || this;\n        var colsVisibleRect = instigator_1.transformer([props.gridState.visibleRect, props.gridState.frozenRowsHeight, props.gridState.horizontalGutterBounds], function (visibleRect, frozenRowsHeight, horizontalGutterBounds) {\n            var scrollGutterHeight = horizontalGutterBounds ? horizontalGutterBounds.height : 0;\n            return __assign({}, visibleRect, { left: 0, right: visibleRect.width, top: visibleRect.top + frozenRowsHeight, bottom: visibleRect.bottom - scrollGutterHeight, height: visibleRect.height - frozenRowsHeight - scrollGutterHeight });\n        });\n        _this.colsPosProps = instigator_1.transformer([colsVisibleRect], function (visibleRect) { return ({\n            gridOffset: { x: visibleRect.left, y: visibleRect.top },\n            visibleRect: visibleRect,\n        }); });\n        return _this;\n    }\n    FrozenColsCanvas.prototype.render = function () {\n        var horizontalGutterBounds = this.props.gridState.horizontalGutterBounds();\n        var scrollGutterHeight = horizontalGutterBounds ? horizontalGutterBounds.height : 0;\n        var props = __assign({}, this.props, { top: this.props.frozenRowsHeight, left: 0, height: this.props.height - this.props.frozenRowsHeight - scrollGutterHeight, width: this.props.frozenColsWidth, posProps: this.colsPosProps });\n        return (React.createElement(GridCanvas_1.GridCanvas, __assign({}, props)));\n    };\n    return FrozenColsCanvas;\n}(React.Component));\nexports.FrozenColsCanvas = FrozenColsCanvas;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shallow_equals_1 = __importDefault(require(\"shallow-equals\"));\nvar commonCanvasRenderer_1 = require(\"./commonCanvasRenderer\");\nvar defaultPosProps = {\n    gridOffset: { x: 0, y: 0 },\n    visibleRect: { left: 0, top: 0, right: 0, bottom: 0, height: 0, width: 0 },\n};\nvar GridCanvasRenderer = /** @class */ (function (_super) {\n    __extends(GridCanvasRenderer, _super);\n    function GridCanvasRenderer(canvas, canvasSize, basicProps, dpr) {\n        var _this = _super.call(this, canvas, dpr, false) || this;\n        _this.posProps = defaultPosProps;\n        _this.prevDraw = null;\n        _this.updateProps = function (canvas, canvasSize, basicProps, posProps) {\n            if (_this.canvas !== canvas) {\n                _this.setCanvas(canvas);\n            }\n            if (!shallow_equals_1.default(_this.canvasSize, canvasSize) || !shallow_equals_1.default(_this.basicProps, basicProps)) {\n                _this.prevDraw = null;\n            }\n            _this.canvasSize = canvasSize;\n            _this.basicProps = basicProps;\n            _this.posProps = posProps;\n            _this.drawScaled(_this.draw);\n        };\n        _this.draw = function () {\n            var prevDraw = _this.prevDraw;\n            var basicProps = _this.basicProps;\n            var posProps = _this.posProps;\n            if (prevDraw) {\n                // Translate according to difference from previous draw\n                var xDiff = (prevDraw.gridOffset.x - posProps.gridOffset.x);\n                var yDiff = (prevDraw.gridOffset.y - posProps.gridOffset.y);\n                _this.shiftExistingCanvas(xDiff, yDiff);\n                _this.drawNewBorderBackground(xDiff, yDiff, _this.canvasSize.width, _this.canvasSize.height);\n            }\n            else {\n                _this.drawWholeBorderBackground(_this.canvasSize.width, _this.canvasSize.height);\n            }\n            // Translate the canvas context so that it's covering the visibleRect\n            _this.translateToGridOffset(posProps.gridOffset);\n            // Draw cells\n            var colIndex = 0;\n            var minRowIndex = Math.floor(posProps.visibleRect.top / (basicProps.rowHeight + basicProps.borderWidth));\n            var maxRowIndex = Math.min(Math.ceil(posProps.visibleRect.bottom / (basicProps.rowHeight + basicProps.borderWidth)), basicProps.gridInnerSize.height / (basicProps.rowHeight + basicProps.borderWidth));\n            for (var _i = 0, _a = basicProps.colBoundaries; _i < _a.length; _i++) {\n                var _b = _a[_i], cellLeft = _b.left, cellRight = _b.right;\n                if (cellRight < posProps.visibleRect.left) {\n                    // Cell is off screen to left, so skip this column\n                    colIndex++;\n                    continue;\n                }\n                if (cellLeft > posProps.visibleRect.right) {\n                    // Cell is off screen to right, so skip this and all future columns\n                    break;\n                }\n                var col = basicProps.columns[colIndex];\n                for (var rowIndex = minRowIndex; rowIndex < maxRowIndex; rowIndex++) {\n                    var row = basicProps.data[rowIndex];\n                    var cell = row[col.fieldName];\n                    var cellBounds = {\n                        left: cellLeft,\n                        top: rowIndex * (basicProps.rowHeight + basicProps.borderWidth),\n                        right: cellLeft + col.width,\n                        bottom: rowIndex * (basicProps.rowHeight + basicProps.borderWidth) + basicProps.rowHeight,\n                        width: col.width,\n                        height: basicProps.rowHeight,\n                    };\n                    if (prevDraw &&\n                        Math.max(cellLeft, posProps.visibleRect.left) >= prevDraw.rect.left &&\n                        Math.min(cellRight, posProps.visibleRect.right) <= prevDraw.rect.right &&\n                        Math.max(cellBounds.top, posProps.visibleRect.top) >= prevDraw.rect.top &&\n                        Math.min(cellBounds.bottom, posProps.visibleRect.bottom) <= prevDraw.rect.bottom) {\n                        // Visible portion of cell is entirely contained within previously drawn region, so we can skip\n                        continue;\n                    }\n                    _this.drawCell(cell, cellBounds, { column: col, rowIndex: rowIndex, colIndex: colIndex });\n                }\n                colIndex++;\n            }\n            // Translate back, to bring our drawn area into the bounds of the canvas element\n            _this.translateToOrigin(posProps.gridOffset);\n            // Remember what area is now drawn\n            _this.prevDraw = {\n                gridOffset: posProps.gridOffset,\n                rect: {\n                    left: Math.max(posProps.gridOffset.x, posProps.visibleRect.left),\n                    top: Math.max(posProps.gridOffset.y, posProps.visibleRect.top),\n                    right: Math.min(posProps.gridOffset.x + _this.canvasSize.width, posProps.visibleRect.right),\n                    bottom: Math.min(posProps.gridOffset.y + _this.canvasSize.height, posProps.visibleRect.bottom),\n                },\n            };\n        };\n        _this.canvasSize = canvasSize;\n        _this.basicProps = basicProps;\n        return _this;\n    }\n    GridCanvasRenderer.prototype.translateToGridOffset = function (gridOffset) {\n        this.context.translate(-gridOffset.x, -gridOffset.y);\n    };\n    GridCanvasRenderer.prototype.translateToOrigin = function (gridOffset) {\n        this.context.translate(gridOffset.x, gridOffset.y);\n    };\n    /*\n     * Fill the entire canvas with the border colour\n     */\n    GridCanvasRenderer.prototype.drawWholeBorderBackground = function (propsWidth, propsHeight) {\n        // Draw base in border colour; cells will draw over this, leaving only the borders\n        this.context.fillStyle = commonCanvasRenderer_1.borderColour;\n        this.context.fillRect(0, 0, propsWidth, propsHeight);\n    };\n    /*\n     * Copy the current image on the canvas back onto the canvas, shifted by the given delta\n     */\n    GridCanvasRenderer.prototype.shiftExistingCanvas = function (xDiff, yDiff) {\n        this.context.drawImage(this.canvas, 0, 0, this.canvas.width * this.dpr, this.canvas.height * this.dpr, xDiff, yDiff, this.canvas.width, this.canvas.height);\n    };\n    /*\n     * Fill with the border colour along any areas of the canvas that are 'new', i.e. need repainting\n     * because they represent areas of the grid that have just become visible after a scroll\n     */\n    GridCanvasRenderer.prototype.drawNewBorderBackground = function (xDiff, yDiff, propsWidth, propsHeight) {\n        // Draw base in border colour in new areas; cells will draw over this, leaving only the borders\n        // (Note, we might fill a corner twice if scrolling diagnally, but the perf cost seems minimal)\n        this.context.fillStyle = commonCanvasRenderer_1.borderColour;\n        if (yDiff < 0) {\n            // Moved down - draw bottom\n            var top_1 = propsHeight + yDiff;\n            var height = -yDiff;\n            this.context.fillRect(0, top_1, propsWidth, height);\n        }\n        else if (yDiff > 0) {\n            // Moved up - draw top\n            var top_2 = 0;\n            var height = yDiff;\n            this.context.fillRect(0, top_2, propsWidth, height);\n        }\n        if (xDiff < 0) {\n            // Moved right - draw right\n            var left = propsWidth + xDiff;\n            var width = -xDiff;\n            this.context.fillRect(left, 0, width, propsHeight);\n        }\n        else if (xDiff > 0) {\n            // Moved left - draw left\n            var left = 0;\n            var width = xDiff;\n            this.context.fillRect(left, 0, width, propsHeight);\n        }\n    };\n    return GridCanvasRenderer;\n}(commonCanvasRenderer_1.CommonCanvasRenderer));\nexports.GridCanvasRenderer = GridCanvasRenderer;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instigator_1 = require(\"instigator\");\nvar React = __importStar(require(\"react\"));\nvar GridCanvas_1 = require(\"./GridCanvas\");\nvar FrozenCornerCanvas = /** @class */ (function (_super) {\n    __extends(FrozenCornerCanvas, _super);\n    function FrozenCornerCanvas(props) {\n        var _this = _super.call(this, props) || this;\n        var cornerVisibleRect = instigator_1.transformer([props.gridState.visibleRect], function (visibleRect) {\n            return __assign({}, visibleRect, { top: 0, left: 0, right: visibleRect.width, bottom: visibleRect.height });\n        });\n        _this.cornerPosProps = instigator_1.transformer([cornerVisibleRect], function (visibleRect) { return ({\n            gridOffset: { x: visibleRect.left, y: visibleRect.top },\n            visibleRect: visibleRect,\n        }); });\n        return _this;\n    }\n    FrozenCornerCanvas.prototype.render = function () {\n        var props = __assign({}, this.props, { top: 0, left: 0, height: this.props.frozenRowsHeight, width: this.props.frozenColsWidth, posProps: this.cornerPosProps });\n        return (React.createElement(GridCanvas_1.GridCanvas, __assign({}, props)));\n    };\n    return FrozenCornerCanvas;\n}(React.Component));\nexports.FrozenCornerCanvas = FrozenCornerCanvas;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instigator_1 = require(\"instigator\");\nvar React = __importStar(require(\"react\"));\nvar GridCanvas_1 = require(\"./GridCanvas\");\nvar FrozenRowsCanvas = /** @class */ (function (_super) {\n    __extends(FrozenRowsCanvas, _super);\n    function FrozenRowsCanvas(props) {\n        var _this = _super.call(this, props) || this;\n        var rowsVisibleRect = instigator_1.transformer([props.gridState.visibleRect, props.gridState.frozenColsWidth, props.gridState.verticalGutterBounds], function (visibleRect, frozenColsWidth, verticalGutterBounds) {\n            var scrollGutterWidth = verticalGutterBounds ? verticalGutterBounds.width : 0;\n            return __assign({}, visibleRect, { top: 0, bottom: visibleRect.height, left: visibleRect.left + frozenColsWidth, right: visibleRect.right - scrollGutterWidth, width: visibleRect.width - frozenColsWidth - scrollGutterWidth });\n        });\n        _this.rowsPosProps = instigator_1.transformer([rowsVisibleRect], function (visibleRect) { return ({\n            gridOffset: { x: visibleRect.left, y: visibleRect.top },\n            visibleRect: visibleRect,\n        }); });\n        return _this;\n    }\n    FrozenRowsCanvas.prototype.render = function () {\n        var verticalGutterBounds = this.props.gridState.verticalGutterBounds();\n        var scrollGutterWidth = verticalGutterBounds ? verticalGutterBounds.width : 0;\n        var props = __assign({}, this.props, { top: 0, left: this.props.frozenColsWidth, height: this.props.frozenRowsHeight, width: this.props.width - this.props.frozenColsWidth - scrollGutterWidth, posProps: this.rowsPosProps });\n        return (React.createElement(GridCanvas_1.GridCanvas, __assign({}, props)));\n    };\n    return FrozenRowsCanvas;\n}(React.Component));\nexports.FrozenRowsCanvas = FrozenRowsCanvas;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instigator_1 = require(\"instigator\");\nvar React = __importStar(require(\"react\"));\nvar gridState_1 = require(\"./gridState\");\nvar highlightCanvasRenderer_1 = require(\"./highlightCanvasRenderer\");\nvar HighlightCanvas = /** @class */ (function (_super) {\n    __extends(HighlightCanvas, _super);\n    function HighlightCanvas(props) {\n        var _this = _super.call(this, props) || this;\n        _this.canvasRef = React.createRef();\n        _this.renderer = null;\n        _this.renderCallback = null;\n        return _this;\n    }\n    HighlightCanvas.prototype.render = function () {\n        return (React.createElement(\"canvas\", { ref: this.canvasRef, width: this.props.width * this.props.gridState.dpr(), height: this.props.height * this.props.gridState.dpr(), style: {\n                position: 'absolute',\n                width: this.props.width + \"px\",\n                height: this.props.height + \"px\",\n                top: 0,\n                left: 0,\n            } }));\n    };\n    HighlightCanvas.prototype.componentDidMount = function () {\n        var _this = this;\n        if (!this.canvasRef.current) {\n            throw new Error('canvasRef is null in componentDidMount - cannot create renderer');\n        }\n        var gridState = this.props.gridState;\n        var basicProps = instigator_1.mergeTransformer({\n            rowHeight: gridState.rowHeight,\n            columnBoundaries: gridState.columnBoundaries,\n            borderWidth: gridState.borderWidth,\n            horizontalGutterBounds: gridState.horizontalGutterBounds,\n            verticalGutterBounds: gridState.verticalGutterBounds,\n            cellBounds: gridState.cellBounds,\n            shouldAllowAutofill: gridState.shouldAllowAutofill,\n        }, gridState_1.shallowEqualsExceptFunctions);\n        var scrollProps = instigator_1.mergeTransformer({\n            horizontalScrollbarPos: gridState.horizontalScrollbarPos,\n            verticalScrollbarPos: gridState.verticalScrollbarPos,\n        });\n        var hoverProps = instigator_1.mergeTransformer({\n            hoveredScrollbar: gridState.hoveredScrollbar,\n            autofillHandleIsHovered: gridState.autofillHandleIsHovered,\n        });\n        var posProps = instigator_1.mergeTransformer({\n            gridOffset: gridState.gridOffset,\n            visibleRect: gridState.visibleRect,\n        });\n        var selectionProps = instigator_1.mergeTransformer({ selectionState: gridState.selectionState });\n        this.renderer = new highlightCanvasRenderer_1.HighlightCanvasRenderer(this.canvasRef.current, basicProps(), gridState.dpr());\n        this.renderCallback = instigator_1.consumer([basicProps, posProps, scrollProps, hoverProps, selectionProps], function (newBasicProps, newPosProps, newScrollProps, newHoverProps, newSelectionProps) {\n            if (_this.renderer) {\n                if (!_this.canvasRef.current) {\n                    throw new Error('canvasRef is null in componentDidMount - cannot create renderer');\n                }\n                _this.renderer.updateProps(_this.canvasRef.current, newBasicProps, newPosProps, newScrollProps, newHoverProps, newSelectionProps);\n            }\n        });\n    };\n    HighlightCanvas.prototype.componentWillUnmount = function () {\n        if (this.renderCallback) {\n            this.renderCallback.deregister();\n        }\n    };\n    return HighlightCanvas;\n}(React.Component));\nexports.HighlightCanvas = HighlightCanvas;\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nexports.InlineTextEditor = function (props) {\n    var defaultText = props.cell.editor.serialise(props.cell.data);\n    var submit = function (e) {\n        var inputValue = e.currentTarget.value;\n        var newData = props.cell.editor.deserialise(inputValue, props.cell.data);\n        props.onSubmit(newData);\n    };\n    var handleKeyPress = function (e) {\n        if (e.key === 'Enter') {\n            submit(e);\n        }\n    };\n    var handleKeyUp = function (e) {\n        if (e.keyCode === 27) {\n            props.onCancel();\n        }\n    };\n    return React.createElement(\"input\", { type: \"text\", style: {\n            position: 'absolute',\n            boxSizing: 'border-box',\n            top: props.top - props.gridOffset.y + \"px\",\n            left: props.left - props.gridOffset.x + \"px\",\n            width: props.width + \"px\",\n            height: props.height + \"px\",\n            border: '0',\n        }, autoFocus: true, defaultValue: defaultText, onBlur: submit, onKeyPress: handleKeyPress, onKeyUp: handleKeyUp });\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instigator_1 = require(\"instigator\");\nvar React = __importStar(require(\"react\"));\nvar GridCanvas_1 = require(\"./GridCanvas\");\nvar MainCanvas = /** @class */ (function (_super) {\n    __extends(MainCanvas, _super);\n    function MainCanvas(props) {\n        var _this = _super.call(this, props) || this;\n        var mainVisibleRect = instigator_1.transformer([props.gridState.visibleRect, props.gridState.frozenRowsHeight, props.gridState.frozenColsWidth], function (visibleRect, frozenRowsHeight, frozenColsWidth) {\n            return __assign({}, visibleRect, { top: visibleRect.top + frozenRowsHeight, left: visibleRect.left + frozenColsWidth, height: visibleRect.height - frozenRowsHeight, width: visibleRect.width - frozenColsWidth });\n        });\n        _this.posProps = instigator_1.transformer([mainVisibleRect], function (visibleRect) { return ({\n            gridOffset: { x: visibleRect.left, y: visibleRect.top },\n            visibleRect: visibleRect,\n        }); });\n        return _this;\n    }\n    MainCanvas.prototype.render = function () {\n        var props = __assign({}, this.props, { top: this.props.frozenRowsHeight, left: this.props.frozenColsWidth, height: this.props.height - this.props.frozenRowsHeight, width: this.props.width - this.props.frozenColsWidth, posProps: this.posProps });\n        return (React.createElement(GridCanvas_1.GridCanvas, __assign({}, props)));\n    };\n    return MainCanvas;\n}(React.Component));\nexports.MainCanvas = MainCanvas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction repeatSelectionIntoFill(selectRange, fillRange, data, columns, cloneCellDef) {\n    var selHeight = selectRange.bottomRight.y - selectRange.topLeft.y + 1;\n    var selWidth = selectRange.bottomRight.x - selectRange.topLeft.x + 1;\n    return data.map(function (row, y) {\n        if (y >= fillRange.topLeft.y && y <= fillRange.bottomRight.y) {\n            return columns.reduce(function (acc, col, x) {\n                if (x >= fillRange.topLeft.x && x <= fillRange.bottomRight.x) {\n                    var srcRowIndex = ((y - fillRange.topLeft.y) % selHeight) + selectRange.topLeft.y;\n                    var srcColIndex = ((x - fillRange.topLeft.x) % selWidth) + selectRange.topLeft.x;\n                    var srcColDef = columns[srcColIndex];\n                    var srcCellDef = data[srcRowIndex][srcColDef.fieldName];\n                    var destRowIndex = y;\n                    var destColIndex = x;\n                    var destColDef = columns[destColIndex];\n                    var destCellDef = data[destRowIndex][destColDef.fieldName];\n                    acc[col.fieldName] = cloneCellDef({\n                        srcRowIndex: srcRowIndex,\n                        srcColIndex: srcColIndex,\n                        srcColDef: srcColDef,\n                        srcCellDef: srcCellDef,\n                        destRowIndex: destRowIndex,\n                        destColIndex: destColIndex,\n                        destColDef: destColDef,\n                        destCellDef: destCellDef,\n                    });\n                }\n                else {\n                    acc[col.fieldName] = row[col.fieldName];\n                }\n                return acc;\n            }, {});\n        }\n        else {\n            return row;\n        }\n    });\n}\nexports.repeatSelectionIntoFill = repeatSelectionIntoFill;\n","import * as React from 'react';\nimport './ControlsForm.css';\n\nexport const ControlsForm = (props: { children?: React.ReactNode }) => {\n    return (\n        <form className=\"controls\">\n            {props.children}\n        </form>\n    );\n};\n\nexport const InlineGroup = (props: { children?: React.ReactNode }) => {\n    return (\n        <span className=\"inline-controls-group\">\n            {props.children}\n        </span>\n    );\n};\n\nexport const NumberInput = (props: Partial<React.InputHTMLAttributes<HTMLInputElement>>) =>\n    <input type=\"number\" {...props} />;\n\ninterface SelectInputProps<T> {\n    values: T[];\n    selectedValue: T;\n    onSelect: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\nexport const RadioInputs = <T extends {}>(\n    { values, selectedValue, onSelect}: SelectInputProps<T>,\n) => {\n    return <React.Fragment>\n        {values.map((val) =>\n            <label key={val.toString()}>\n                <input type=\"radio\" value={val.toString()} checked={val === selectedValue} onChange={onSelect} />\n                {val}\n            </label>)}\n    </React.Fragment>;\n};\n","import * as React from 'react';\nimport './FixedSizeHolder.css';\n\nexport const FixedSizeHolder = (props: {children?: React.ReactNode}) => {\n    return (\n        <div className=\"fixed-size-holder\">\n            {props.children}\n        </div>\n    );\n};\n","import * as React from 'react';\nimport './PaddedPage.css';\n\nconst PaddedPage = (props: { children?: React.ReactNode }) => {\n    return (\n        <div className=\"padded-page\">\n            {props.children}\n        </div>\n    );\n};\n\nexport default PaddedPage;\n","import { CellDef, ColumnDef, DataRow } from '../../../src/types';\n\nexport function createFakeDataAndColumns<T>(\n    numRows: number,\n    numCols: number,\n    dataGen: (x: number, y: number) => T,\n    options: Partial<CellDef<T>> = {},\n) {\n    return {\n        columns: createFakeColumns(numCols),\n        rows: createFakeData(numRows, numCols, dataGen, options),\n    };\n}\n\nexport function createFakeColumns(numCols: number) {\n    const cols: ColumnDef[] = [];\n    for (let i = 0; i < numCols; i++) {\n        cols.push({\n            fieldName: `col-${i}`,\n            width: 50,\n        });\n    }\n    return cols;\n}\n\nexport function createFakeData<T>(\n    numRows: number,\n    numCols: number,\n    dataGen: (x: number, y: number) => T,\n    options: Partial<CellDef<T>> = {},\n) {\n    const rows: Array<DataRow<T>> = [];\n    for (let i = 0; i < numRows; i++) {\n        const row: DataRow<T> = {};\n        for (let j = 0; j < numCols; j++) {\n            row[`col-${j}`] = {\n                getText: () => `${i + 1}x${j + 1}`,\n                data: dataGen(j, i),\n                ...options,\n            };\n        }\n        rows.push(row);\n    }\n    return rows;\n}\n","import * as React from 'react';\nimport {\n    AutofillContext,\n    CellDef,\n    ColumnDef,\n    DataRow,\n    ReactCanvasGrid,\n    repeatSelectionIntoFill,\n    SelectRange,\n} from 'react-canvas-grid';\nimport { ControlsForm, InlineGroup, RadioInputs } from '../components/ControlsForm';\nimport { FixedSizeHolder } from '../components/FixedSizeHolder';\nimport PaddedPage from '../components/PaddedPage';\nimport { createFakeColumns, createFakeData } from '../data/dataAndColumns';\n\ntype TextPair = [string, string];\n\ntype AutofillMode = 'none' | 'single' | 'multi';\n\ninterface AutofillableGridState {\n    data: Array<DataRow<TextPair>>;\n    columns: ColumnDef[];\n    autofillMode: AutofillMode;\n}\n\nconst numRows = 100;\nconst numCols = 200;\n\n// Hash one int into another - just a cheap way of producing random-looking but deterministic numbers\n/* tslint:disable:no-bitwise */\nfunction hash(x: number): number {\n    x = ((x >> 16) ^ x) * 0x45d9f3b;\n    x = ((x >> 16) ^ x) * 0x45d9f3b;\n    x = (x >> 16) ^ x;\n    return x;\n}\n/* tslint:enable:no-bitwise */\n\nfunction getRandomTextA(x: number, y: number): string {\n    return hash(x + y * numCols + 1).toString(36).substr(0, 3);\n}\nfunction getRandomTextB(x: number, y: number): string {\n    return hash(x + y * numCols + numRows * numCols + 1).toString(36).substr(0, 3);\n}\n\nfunction getTextPair(x: number, y: number): TextPair {\n    return [getRandomTextA(x, y), getRandomTextB(x, y)];\n}\n\nexport class AutofillableGrid extends React.Component<{}, AutofillableGridState> {\n    private readonly showAllowAutofillMethods: { [mode in AutofillMode]: (selectRange: SelectRange) => boolean };\n\n    constructor(props: {}) {\n        super(props);\n\n        const options: Partial<CellDef<TextPair>> = {\n            getText: ([a, b]: TextPair) => `${a}/${b}`,\n        };\n\n        this.state = {\n            data: createFakeData(numRows, numCols, (x, y) => getTextPair(x, y), options),\n            columns: createFakeColumns(numCols),\n            autofillMode: 'multi',\n        };\n\n        this.showAllowAutofillMethods = {\n            none: (_) => {\n                return false;\n            },\n            single: (selectRange: SelectRange) => {\n                const width = selectRange.bottomRight.x - selectRange.topLeft.x + 1;\n                const height = selectRange.bottomRight.y - selectRange.topLeft.y + 1;\n                const numCells = width * height;\n                return numCells === 1;\n            },\n            multi: (_) => {\n                return true;\n            },\n        };\n    }\n\n    public render() {\n        return (\n            <PaddedPage>\n                <h1>Autofill</h1>\n                <p>\n                    ReactCanvasGrid can 'autofill' values - i.e. copy the values from the current\n                    selection into a new area - when the autofill handle is dragged to define the new area.\n                    The callback <code>shouldAllowAutofill</code> must be supplied to control when the autofill handle\n                    is shown, along with the <code>onAutofill</code> callback to update the data.\n                </p>\n                <p>\n                    The <code>shouldAllowAutofill</code> callback is passed the currently selected range, and\n                    must return a boolean (<code>true</code> to show allow autofill and show the autofill\n                    handle, <code>false</code> to disallow and hide).\n                </p>\n                <p>\n                    The <code>onAutofill</code> is passed both the currently selected range and the range to be filled,\n                    and should update the <code>data</code> prop. ReactCanvasGrid provides\n                    the <code>repeatSelectionIntoFill</code> function as a convenience: it takes the selected range,\n                    range to be filled, current data, columns, and a 'factory' function; it returns a new\n                    copy of the data where the area to be filled has been overwritten with cells created by the\n                    'factory' from the selected range.\n                </p>\n                <p>\n                    The factory method could simply clone the source cell, or it could follow more complex logic.\n                    In the below example, some cell data (the text after the slash) is treated as invariate by the\n                    factory function, and some cell data (the text before the slash) is treated as copyable.\n                </p>\n                <p>\n                    The factory method is passed a single <code>context</code> object, which includes information\n                    on the source (from the selection) and destination (from the area to\n                    fill): <code>[src|dest]RowIndex</code>, <code>[src|dest]ColIndex</code>,{' '}\n                    <code>[src|dest]ColDef</code>, and <code>[src|dest]CellDef</code>.\n                </p>\n\n                <ControlsForm>\n                    <div>\n                        <InlineGroup>\n                            <span>Allowed autofill mode: </span>\n                            <RadioInputs\n                                values={['none', 'single', 'multi']}\n                                selectedValue={this.state.autofillMode}\n                                onSelect={this.onAutofillModeSelect}\n                            />\n                        </InlineGroup>\n                    </div>\n                </ControlsForm>\n\n                <FixedSizeHolder>\n                    <ReactCanvasGrid<TextPair>\n                        columns={this.state.columns}\n                        data={this.state.data}\n                        rowHeight={20}\n                        shouldAllowAutofill={this.showAllowAutofillMethods[this.state.autofillMode]}\n                        onAutofill={this.onAutofill}\n                        frozenCols={1}\n                        frozenRows={1}\n                    />\n                </FixedSizeHolder>\n            </PaddedPage>\n        );\n    }\n\n    private onAutofill = (selectRange: SelectRange, fillRange: SelectRange) => {\n        const data = repeatSelectionIntoFill(\n            selectRange,\n            fillRange,\n            this.state.data,\n            this.state.columns,\n            autofillCell,\n        );\n        this.setState({ data });\n    }\n\n    private onAutofillModeSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const autofillMode = event.currentTarget.value as AutofillMode;\n        this.setState({ autofillMode });\n    }\n}\n\nfunction autofillCell(context: AutofillContext<TextPair>): CellDef<TextPair> {\n    return {\n        ...context.destCellDef,\n        data: [context.srcCellDef.data[0], context.destCellDef.data[1]],\n    };\n}\n","import * as React from 'react';\nimport { ReactCanvasGrid } from 'react-canvas-grid';\nimport { FixedSizeHolder } from '../components/FixedSizeHolder';\nimport PaddedPage from '../components/PaddedPage';\nimport { createFakeDataAndColumns } from '../data/dataAndColumns';\n\nconst renderBackgroundLightGreen = (context: CanvasRenderingContext2D, cellBounds: ClientRect) => {\n    context.fillStyle = 'lightgreen';\n    context.fillRect(cellBounds.left, cellBounds.top, cellBounds.width, cellBounds.height);\n};\n\nexport const CustomBackgroundGrid = () => {\n    const options = { renderBackground: renderBackgroundLightGreen };\n    const { columns, rows: data } = createFakeDataAndColumns(100, 20, () => {/* no op */}, options);\n\n    return (\n        <PaddedPage>\n            <h1>Custom Background Renderer</h1>\n            <p>\n                When specifying a cell definition, you can provide a <code>renderBackground</code> function\n                to customise drawing the cell's background.\n            </p>\n            <p>\n                Here, all cells use the same background renderer in order to draw the background as\n                light green.\n            </p>\n            <FixedSizeHolder>\n                <ReactCanvasGrid<void>\n                    columns={columns}\n                    data={data}\n                    rowHeight={20}\n                />\n            </FixedSizeHolder>\n        </PaddedPage>\n    );\n};\n","import * as React from 'react';\nimport { CellDef, cellHasTextFunction, ReactCanvasGrid } from 'react-canvas-grid';\nimport { FixedSizeHolder } from '../components/FixedSizeHolder';\nimport PaddedPage from '../components/PaddedPage';\nimport { createFakeDataAndColumns } from '../data/dataAndColumns';\n\nconst renderTextRed = (context: CanvasRenderingContext2D, cellBounds: ClientRect, cell: CellDef<void>) => {\n    context.fillStyle = 'red';\n    const text = cellHasTextFunction(cell) ? cell.getText(cell.data) : cell.text;\n    context.fillText(text, cellBounds.left + 2, cellBounds.top + 15, cellBounds.width - 4);\n};\n\nexport const CustomTextGrid = () => {\n    const options = { renderText: renderTextRed };\n    const { columns, rows: data } = createFakeDataAndColumns(100, 20, () => {/* no op */}, options);\n\n    return (\n        <PaddedPage>\n            <h1>Custom Text Renderer</h1>\n            <p>\n                When specifying a cell definition, you can provide a <code>renderText</code> function\n                to customise drawing the cell's text.\n            </p>\n            <p>\n                Here, all cells use the same text renderer in order to draw the text as red.\n            </p>\n            <FixedSizeHolder>\n                <ReactCanvasGrid<void>\n                    columns={columns}\n                    data={data}\n                    rowHeight={20}\n                />\n            </FixedSizeHolder>\n        </PaddedPage>\n    );\n};\n","import * as React from 'react';\nimport { ColumnDef, DataRow, ReactCanvasGrid } from 'react-canvas-grid';\nimport { ControlsForm, InlineGroup, NumberInput } from '../components/ControlsForm';\nimport { FixedSizeHolder } from '../components/FixedSizeHolder';\nimport PaddedPage from '../components/PaddedPage';\nimport { createFakeDataAndColumns } from '../data/dataAndColumns';\n\ninterface DynamicDataGridState {\n    columns: ColumnDef[];\n    data: Array<DataRow<void>>;\n    numCols: number;\n    numRows: number;\n}\n\nexport class DynamicDataGrid extends React.Component<{}, DynamicDataGridState> {\n    private changeColsDebounceTimeout: number | null = null;\n    private changeRowsDebounceTimeout: number | null = null;\n\n    constructor(props: {}) {\n        super(props);\n\n        this.state = getDefaultState();\n    }\n\n    public render() {\n        return (\n            <PaddedPage>\n                <h1>Dynamic Data</h1>\n                <p>\n                    Updates to the <code>columns</code> and <code>data</code> props cause the grid to\n                    re-render with new values.\n                </p>\n                <p>\n                    The selected cells are cleared if <code>columns</code> changes or the number of rows\n                    (in <code>data</code>) changes. The selection is not cleared, however, if <code>columns</code>\n                    &#160;stays the same and <code>data</code> is replaced with an array of the same length (even if the\n                    contents within the array is different). I.e. if the <em>structure</em> of the grid has changed\n                    then the selection is cleared, but if only the <em>contents</em> change then the selection is\n                    retained.\n                </p>\n                <p>\n                    The scroll position is maintained as long as it is valid in the newly rendered grid. If not\n                    (because there are fewer columns or rows) the scroll position is truncated.\n                </p>\n\n                <ControlsForm>\n                    <div>\n                        <InlineGroup>\n                            <label>Number of rows: </label>\n                            <NumberInput\n                                id=\"num-rows\"\n                                onChange={this.changeNumRows}\n                                defaultValue={this.state.numRows as any}\n                            />\n                        </InlineGroup>\n                        <InlineGroup>\n                            <label>Number of columns: </label>\n                            <NumberInput\n                                id=\"num-cols\"\n                                onChange={this.changeNumCols}\n                                defaultValue={this.state.numCols as any}\n                            />\n                        </InlineGroup>\n                    </div>\n                    <div>\n                        <InlineGroup>\n                            <button id=\"first-col-to-end\" onClick={this.moveFirstColumnToEnd}>\n                                Move first column to end\n                            </button>\n                        </InlineGroup>\n                        <InlineGroup>\n                            <button id=\"modify-top-left\" onClick={this.modifyTopLeftCell}>\n                                Modify top left cell\n                            </button>\n                        </InlineGroup>\n                        <InlineGroup>\n                            <button id=\"reset\" onClick={this.reset}>Reset</button>\n                        </InlineGroup>\n                    </div>\n                </ControlsForm>\n\n                <FixedSizeHolder>\n                    <ReactCanvasGrid<void>\n                        columns={this.state.columns}\n                        data={this.state.data}\n                        rowHeight={20}\n                    />\n                </FixedSizeHolder>\n            </PaddedPage>\n        );\n    }\n\n    private changeNumRows = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (this.changeRowsDebounceTimeout) {\n            clearTimeout(this.changeRowsDebounceTimeout);\n        }\n        const numRows = event.target.valueAsNumber;\n        this.changeRowsDebounceTimeout = setTimeout(this.changeNumRowsDebounced, 80, numRows);\n    }\n\n    private changeNumRowsDebounced = (numRows: number) => {\n        this.changeRowsDebounceTimeout = null;\n        const { columns, rows: data } = createFakeDataAndColumns(numRows, this.state.numCols, () => {/* no op */});\n\n        this.setState({ columns, data, numRows });\n    }\n\n    private changeNumCols = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (this.changeColsDebounceTimeout) {\n            clearTimeout(this.changeColsDebounceTimeout);\n        }\n        const numCols = event.target.valueAsNumber;\n        this.changeColsDebounceTimeout = setTimeout(this.changeNumColsDebounced, 80, numCols);\n    }\n\n    private changeNumColsDebounced = (numCols: number) => {\n        this.changeColsDebounceTimeout = null;\n        const { columns, rows: data } = createFakeDataAndColumns(this.state.numRows, numCols, () => {/* no op */});\n\n        this.setState({ columns, data, numCols });\n    }\n\n    private moveFirstColumnToEnd = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>  {\n        this.setState({\n            columns: [...this.state.columns.slice(1), this.state.columns[0]],\n        });\n        event.preventDefault();\n    }\n\n    private modifyTopLeftCell = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>  {\n        const firstColName = this.state.columns[0].fieldName;\n        this.setState({\n            data: [\n                {\n                    ...this.state.data[0],\n                    [firstColName]: {\n                        ...this.state.data[0][firstColName],\n                        getText: () => 'Modified',\n                    },\n                },\n                ...this.state.data.slice(1),\n            ],\n        });\n        event.preventDefault();\n    }\n\n    private reset = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        this.setState(getDefaultState());\n        event.preventDefault();\n    }\n}\n\nconst getDefaultState = () => {\n    const { columns, rows: data } = createFakeDataAndColumns(20, 100, () => {/* no op */});\n\n    return {\n        columns,\n        data,\n        numCols: 100,\n        numRows: 20,\n    };\n};\n","import * as React from 'react';\nimport { CellDataChangeEvent, CellDef, DataRow, ReactCanvasGrid } from 'react-canvas-grid';\nimport { FixedSizeHolder } from '../components/FixedSizeHolder';\nimport PaddedPage from '../components/PaddedPage';\nimport { createFakeColumns, createFakeData } from '../data/dataAndColumns';\n\ntype NumPair = [number, number];\n\ninterface EditableDataGridState {\n    data: Array<DataRow<NumPair>>;\n}\n\nexport class EditableDataGrid extends React.Component<{}, EditableDataGridState> {\n    constructor(props: {}) {\n        super(props);\n\n        const options: Partial<CellDef<NumPair>> = {\n            editor: {\n                serialise: ([a, b]: NumPair) => `${a},${b}`,\n                deserialise: (text: string, prev: NumPair) => {\n                    const match = text.match(/(\\d+),(\\d+)/);\n                    if (match) {\n                        return [parseInt(match[1], 10), parseInt(match[2], 10)];\n                    } else {\n                        return prev;\n                    }\n                },\n            },\n            getText: ([a, b]: NumPair) => `${a}x${b}`,\n        };\n\n        this.state = {\n            data: createFakeData(100, 200, (x, y) => [x, y] as NumPair, options),\n        };\n    }\n\n    public render() {\n        const columns = createFakeColumns(20);\n\n        return (\n            <PaddedPage>\n                <h1>Editable Data</h1>\n                <p>\n                    A cell is editable if its definition includes an <code>editor</code> property.\n                    If the grid also has a <code>onCellDataChanged</code> prop, that can persist\n                    changes made to data to be shown on the grid.\n                </p>\n                <p>\n                    The <code>editor</code> provides two functions, <code>serialise</code> and\n                    &#160;<code>deserialise</code>, that translate between the <code>data</code> stored\n                    on the cell definition and the text displayed in the editor <code>input</code>.\n                </p>\n                <p>\n                    Displaying the inline editor is not enough, however, as react-canvas-grid does not\n                    manage the data; instead, when data changes, it will call the function provided as\n                    the <code>onCellDataChanged</code> prop. This function can then update the contents\n                    of the <code>data</code> prop, causing the grid to render the changes.\n                </p>\n                <p>\n                    Note that the text displayed in the editor need not be the same as the text\n                    displayed in the cell itself (as defined by <code>text</code> or <code>getText</code>).\n                    In this example, the editor text is of the form <code>A,B</code> (i.e. comma separated),\n                    but cells are displayed as <code>AxB</code> (i.e. with an x).\n                </p>\n                <p>\n                    To edit a cell, double click it. Invalid values will be ignored.\n                </p>\n                <FixedSizeHolder>\n                    <ReactCanvasGrid<NumPair>\n                        columns={columns}\n                        data={this.state.data}\n                        rowHeight={20}\n                        onCellDataChanged={this.onCellDataChanged}\n                    />\n                </FixedSizeHolder>\n            </PaddedPage>\n        );\n    }\n\n    private onCellDataChanged = (event: CellDataChangeEvent<NumPair>) => {\n        this.setState({\n            data: this.state.data.map((row, i) => {\n                if (i === event.rowIndex) {\n                    return {\n                        ...row,\n                        [event.fieldName]: {\n                            ...row[event.fieldName],\n                            data: event.newData,\n                        },\n                    };\n                } else {\n                    return row;\n                }\n            }),\n        });\n    }\n}\n","import * as React from 'react';\nimport './EventLog.css';\n\ninterface EventLogProps {\n    log: string;\n}\n\nexport class EventLog extends React.PureComponent<EventLogProps> {\n    private logRef: React.RefObject<HTMLTextAreaElement>;\n\n    constructor(props: EventLogProps) {\n        super(props);\n        this.logRef = React.createRef();\n    }\n\n    public render() {\n        return (<textarea ref={this.logRef} className=\"event-log\" value={this.props.log} readOnly />);\n    }\n\n    public componentDidUpdate() {\n        if (this.logRef.current) {\n            this.logRef.current.scrollTop = this.logRef.current.scrollHeight;\n        }\n    }\n}\n","import * as React from 'react';\nimport { CellDataChangeEvent, CellDef, ReactCanvasGrid } from 'react-canvas-grid';\nimport { Link } from 'react-router-dom';\nimport { EventLog } from '../components/EventLog';\nimport { FixedSizeHolder } from '../components/FixedSizeHolder';\nimport PaddedPage from '../components/PaddedPage';\nimport { createFakeDataAndColumns } from '../data/dataAndColumns';\n\ninterface EditEventsState {\n    eventLog: string;\n}\n\nconst options: Partial<CellDef<string>> = {\n    editor: {\n        serialise: (value: string) => value,\n        deserialise: (text: string, _: string) => text,\n    },\n    getText: (value: string) => value,\n};\nconst { columns, rows: data } = createFakeDataAndColumns(100, 20, (x, y) => `${x},${y}`, options);\n\nexport class EditEventsGrid extends React.Component<{}, EditEventsState> {\n    constructor(props: {}) {\n        super(props);\n        this.state = {\n            eventLog: '',\n        };\n    }\n\n    public render() {\n        return (\n            <PaddedPage>\n                <h1>Edit Events</h1>\n                <p>\n                    The callback <code>onCellDataChanged</code> allow consumers of react-canvas-grid to\n                    respond to the user making changes to the data. Typically, this is used to update the\n                    data passed to the grid in the <code>data</code> prop. Without doing so, the grid's\n                    data will not be changed. See the <Link to=\"/editable\">Editable Data</Link> example\n                    for further detail. This example does not update the data, but merely logs event.\n                </p>\n                <p>\n                    Note that the callback is fired when the user hits enter on the inline editor, or when\n                    the inline editor loses focus, regardless of whether the data has been changed. The\n                    inline editor can be dismissed with the escape key, regardless of whether the data has\n                    been changed.\n                </p>\n                <FixedSizeHolder>\n                    <ReactCanvasGrid<string>\n                        columns={columns}\n                        data={data}\n                        rowHeight={20}\n                        onCellDataChanged={this.onCellDataChanged}\n                    />\n                </FixedSizeHolder>\n                <EventLog log={this.state.eventLog} />\n            </PaddedPage>\n        );\n    }\n\n    private onCellDataChanged = (event: CellDataChangeEvent<string>) => {\n        const { colIndex, rowIndex, fieldName, newData } = event;\n\n        this.setState({\n            eventLog: this.state.eventLog +\n                `changed: row ${rowIndex} of column \"${fieldName}\" (index ${colIndex}) to ${newData}\\n`,\n        });\n    }\n}\n","import React, { Component } from 'react';\nimport {\n  AutofillContext,\n  CellDataChangeEvent,\n  CellDef,\n  ColumnDef,\n  DataRow,\n  getCellText,\n  ReactCanvasGrid,\n  repeatSelectionIntoFill,\n  SelectRange,\n} from 'react-canvas-grid';\nimport './Everything.css';\n\nconst numColsLarge = 250;\nconst numColsSmall = 3;\nconst numRows = 250;\n\nconst labels = [\n  {text: 'Lorem', colour: 'red'},\n  {text: 'Ipsum', colour: 'orange'},\n  {text: 'Dolor', colour: 'lightblue'},\n  {text: 'Sit', colour: 'lightgreen'},\n  {text: 'Amet', colour: 'lightpink'},\n];\n\ntype HighlightPosition = 'topleft' | 'bottomright' | 'full' | 'none';\nconst highlights: HighlightPosition[] = [\n  'topleft',\n  'bottomright',\n  'full',\n  'none', 'none', 'none', 'none', 'none', 'none', // Hacky way to make 'none' more likely\n];\n\nconst renderHeaderBackground = (context: CanvasRenderingContext2D, cellBounds: ClientRect) => {\n  context.fillStyle = '#eee';\n  context.fillRect(cellBounds.left, cellBounds.top, cellBounds.width, cellBounds.height);\n};\n\nconst renderCellBackground = (\n  context: CanvasRenderingContext2D,\n  cellBounds: ClientRect,\n  cell: CustomBgCellDef,\n) => {\n  if (cell.data.highlight !== 'full') {\n    context.fillStyle = cell.data.bgColour;\n    context.fillRect(cellBounds.left, cellBounds.top, cellBounds.width, cellBounds.height);\n  }\n\n  if (cell.data.highlight !== 'none') {\n    context.fillStyle = 'yellow';\n    if (cell.data.highlight === 'full') {\n      context.fillRect(cellBounds.left, cellBounds.top, cellBounds.width, cellBounds.height);\n    } else if (cell.data.highlight === 'topleft') {\n      context.beginPath();\n      context.moveTo(cellBounds.left, cellBounds.top);\n      context.lineTo(cellBounds.left, cellBounds.bottom);\n      context.lineTo(cellBounds.right, cellBounds.top);\n      context.closePath();\n      context.fill();\n    } else if (cell.data.highlight === 'bottomright') {\n      context.beginPath();\n      context.moveTo(cellBounds.left, cellBounds.bottom);\n      context.lineTo(cellBounds.right, cellBounds.bottom);\n      context.lineTo(cellBounds.right, cellBounds.top);\n      context.closePath();\n      context.fill();\n    }\n  }\n};\n\ninterface CustomCellData {\n  bgColour: string;\n  text: string;\n  shouldReverseText: boolean;\n  highlight: HighlightPosition;\n}\n\ntype CustomBgCellDef = CellDef<CustomCellData>;\n\ntype AllCellDataTypes = CustomCellData | null;\n\nfunction getCustomCellText(data: CustomCellData) {\n  if (data.shouldReverseText) {\n    return data.text.split('').reverse().join('');\n  } else {\n    return data.text;\n  }\n}\n\nfunction serailiseCustomData(data: CustomCellData): string {\n  return (data.shouldReverseText ? '!' : '') + data.text;\n}\n\nfunction deserialiseCustomData(value: string, oldData: CustomCellData): CustomCellData {\n  const reversed = value.startsWith('!');\n  const text = reversed ? value.slice(1) : value;\n  return {\n    ...oldData,\n    shouldReverseText: reversed,\n    text,\n  };\n}\n\nfunction createCols(numCols: number) {\n  const colDefs: ColumnDef[] = [\n    {\n      fieldName: 'date',\n      width: 80,\n    },\n  ];\n  for (let i = 0; i < numCols; i++) {\n    colDefs.push({\n      fieldName: i.toString(),\n      width: 100,\n    });\n  }\n  return colDefs;\n}\n\nfunction createData(numCols: number) {\n  const data: Array<DataRow<AllCellDataTypes>> = [];\n\n  for (let i = 0; i < numRows; i++) {\n    const row: DataRow<AllCellDataTypes> = {\n      date: {\n        text: (i + 1).toString(),\n        data: null,\n        renderBackground: renderHeaderBackground,\n      },\n    };\n    for (let j = 0; j < numCols; j++) {\n      const label = labels[Math.floor(Math.random() * labels.length)];\n      const highlight = highlights[Math.floor(Math.random() * highlights.length)];\n      if (i === 0) {\n        const cell: CustomBgCellDef = {\n          getText: getCustomCellText,\n          data: { bgColour: label.colour, highlight, text: label.text, shouldReverseText: Math.random() < 0.5 },\n          renderBackground: renderHeaderBackground,\n        };\n        row[j.toString()] = cell as CellDef<AllCellDataTypes>;\n      } else {\n        const cell: CustomBgCellDef = {\n          getText: getCustomCellText,\n          data: { bgColour: label.colour, highlight, text: label.text, shouldReverseText: Math.random() < 0.5 },\n          renderBackground: renderCellBackground,\n          editor: {\n            serialise: serailiseCustomData,\n            deserialise: deserialiseCustomData,\n          },\n        };\n        row[j.toString()] = cell as CellDef<AllCellDataTypes>;\n      }\n    }\n    data.push(row);\n  }\n  return data;\n}\n\ninterface EverythingState {\n  colDefs: ColumnDef[];\n  data: Array<DataRow<AllCellDataTypes>>;\n  selectedRange: SelectRange | null;\n  isDragging: boolean;\n  focusedCol: number | null;\n  lastKeyPress: string | null;\n}\n\nexport class Everything extends Component<{}, EverythingState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      colDefs: createCols(numColsLarge),\n      data: createData(numColsLarge),\n      selectedRange: null,\n      isDragging: false,\n      focusedCol: null,\n      lastKeyPress: null,\n    };\n  }\n\n  public render() {\n    const colHeaders = this.state.colDefs.map((cd) => {\n      const headerRow = this.state.data[0];\n      const headerCell = headerRow[cd.fieldName];\n      const text = getCellText(headerCell);\n      return text;\n    });\n    return (\n      <React.Fragment>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <p>\n              Page header\n            </p>\n            <div>\n              {this.state.isDragging ? 'Dragging' : ''}\n              &nbsp;\n              {this.state.selectedRange ? JSON.stringify(this.state.selectedRange) : ''}\n            </div>\n            <div>{this.state.lastKeyPress}</div>\n            <button onClick={this.replaceDataLarge}>Replace data (Large)</button>\n            <button onClick={this.replaceDataSmall}>Replace data (Small)</button>\n            <button onClick={this.updateCell}>Update cell</button>\n            <label>Focus column:</label>\n            <select onChange={this.focusColumn} defaultValue={'none'}>\n              <option value={'none'}>None</option>\n              {colHeaders.map((text, i) => (\n                <option key={i} value={i}>{i} ({text})</option>\n              ))}\n            </select>\n          </header>\n          <div style={{height: '600px', width: '800px', overflow: 'scroll'}}>\n            <div style={{height: '80px', backgroundColor: 'blue'}}>\n              <span>Body header</span>\n            </div>\n            <div\n              style={{paddingLeft: '100px', paddingRight: '100px', backgroundColor: 'purple'}}\n              onKeyPress={this.onKeyPressed}\n            >\n              <ReactCanvasGrid<AllCellDataTypes>\n                cssHeight={'800px'}\n                cssWidth={'800px'}\n                columns={this.state.colDefs}\n                data={this.state.data}\n                rowHeight={20}\n                frozenRows={1}\n                frozenCols={1}\n                onSelectionChangeStart={this.selectionChanged}\n                onSelectionChangeUpdate={this.selectionChanged}\n                onSelectionChangeEnd={this.selectionFinished}\n                onSelectionCleared={this.selectionCleared}\n                onCellDataChanged={this.onCellDataChanged}\n                focusedColIndex={this.state.focusedCol}\n                shouldAllowAutofill={() => true}\n                onAutofill={this.onAutofill}\n              />\n            </div>\n            <div style={{height: '80px', backgroundColor: 'red'}}>\n              <span>Body footer</span>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private selectionChanged = (selectedRange: SelectRange | null) => {\n    this.setState({ selectedRange, isDragging: true });\n  }\n\n  private selectionFinished = (selectedRange: SelectRange | null) => {\n    this.setState({ selectedRange, isDragging: false });\n  }\n\n  private selectionCleared = () => {\n    this.setState({ selectedRange: null, isDragging: false });\n  }\n\n  private focusColumn = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (event.target.value === 'none') {\n      this.setState({ focusedCol: null });\n    } else {\n      this.setState({ focusedCol: parseInt(event.target.value, 10) });\n    }\n  }\n\n  private replaceDataLarge = () => {\n    this.setState({\n      colDefs: createCols(numColsLarge),\n      data: createData(numColsLarge),\n    });\n  }\n\n  private replaceDataSmall = () => {\n    this.setState({\n      colDefs: createCols(numColsSmall),\n      data: createData(numColsSmall),\n    });\n  }\n\n  private updateCell = () => {\n    this.setState({\n      data: this.state.data.map((row, i) => {\n        if (i === 0) {\n          const label = labels[Math.floor(Math.random() * labels.length)];\n          const highlight = highlights[Math.floor(Math.random() * highlights.length)];\n          return {\n            ...row,\n            0: {\n              ...row[0],\n              data: {\n                ...row[0].data,\n                bgColour: label.colour,\n                highlight,\n                text: label.text,\n                shouldReverseText: Math.random() < 0.5,\n              },\n            },\n          };\n        } else {\n          return row;\n        }\n      }),\n    });\n  }\n\n  private onCellDataChanged = (event: CellDataChangeEvent<AllCellDataTypes>) => {\n    this.setState({\n      data: this.state.data.map((row, i) => {\n        if (i === event.rowIndex) {\n          return {\n            ...row,\n            [event.fieldName]: {\n              ...row[event.fieldName],\n              data: event.newData,\n            },\n          };\n        } else {\n          return row;\n        }\n      }),\n    });\n  }\n\n  private onKeyPressed = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    this.setState({\n      lastKeyPress: event.key,\n    });\n  }\n\n  private onAutofill = (selectRange: SelectRange, fillRange: SelectRange) => {\n    const data = repeatSelectionIntoFill(\n        selectRange,\n        fillRange,\n        this.state.data,\n        this.state.colDefs,\n        autofillCell,\n    );\n    this.setState({ data });\n  }\n}\n\nfunction autofillCell(context: AutofillContext<AllCellDataTypes>): CellDef<AllCellDataTypes> {\n  if (!context.destCellDef.data || !context.srcCellDef.data) {\n    throw new Error(`Can't autofill to/from null data`);\n  }\n  return {\n      ...context.destCellDef,\n      data: {\n        ...context.destCellDef.data,\n        shouldReverseText: context.srcCellDef.data.shouldReverseText,\n        text: context.srcCellDef.data.text,\n      },\n  };\n}\n","import * as React from 'react';\nimport { ReactCanvasGrid } from 'react-canvas-grid';\nimport { ControlsForm } from '../components/ControlsForm';\nimport { FixedSizeHolder } from '../components/FixedSizeHolder';\nimport PaddedPage from '../components/PaddedPage';\nimport { createFakeDataAndColumns } from '../data/dataAndColumns';\n\ninterface FocusColumnGridState {\n    focusedCol: number | null;\n    freezeCols: boolean;\n}\n\nexport class FocusColumnGrid extends React.Component<{}, FocusColumnGridState> {\n    constructor(props: {}) {\n        super(props);\n\n        this.state = {\n            focusedCol: null,\n            freezeCols: false,\n        };\n    }\n\n    public render() {\n        const { columns, rows: data } = createFakeDataAndColumns(20, 100, () => {/* no op */});\n\n        return (\n            <PaddedPage>\n                <h1>Focused Columns</h1>\n                <p>\n                    Updates to the <code>focusedColIndex</code> cause the grid to automatically scroll\n                    to ensure the indicated column is displayed. The scrolling behaviour is aware of\n                    frozen columns.\n                </p>\n                <p>\n                    This can be useful for building a 'search' feature.\n                </p>\n\n                <ControlsForm>\n                    <div>\n                        <label>Select a column to focus: </label>\n                        <select onChange={this.focusColumn} defaultValue={'none'}>\n                            <option value={'none'}>None</option>\n                            {columns.map((_, i) => (\n                                <option key={i} value={i}>{i + 1}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <div>\n                        <label htmlFor=\"toggle-frozen-cols\">Select to freeze columns 1 &amp; 2: </label>\n                        <input id=\"toggle-frozen-cols\" type=\"checkbox\" onChange={this.toggleFrozenCols} />\n                    </div>\n                </ControlsForm>\n\n                <FixedSizeHolder>\n                    <ReactCanvasGrid<void>\n                        columns={columns}\n                        data={data}\n                        rowHeight={20}\n                        focusedColIndex={this.state.focusedCol}\n                        frozenCols={this.state.freezeCols ? 2 : 0}\n                    />\n                </FixedSizeHolder>\n            </PaddedPage>\n        );\n    }\n\n    private focusColumn = (event: React.ChangeEvent<HTMLSelectElement>) => {\n      if (event.target.value === 'none') {\n        this.setState({ focusedCol: null });\n      } else {\n        this.setState({ focusedCol: parseInt(event.target.value, 10) });\n      }\n    }\n\n    private toggleFrozenCols = () => {\n        this.setState({ freezeCols: !this.state.freezeCols });\n    }\n}\n","import * as React from 'react';\nimport { CellDef, ReactCanvasGrid } from 'react-canvas-grid';\nimport { Link } from 'react-router-dom';\nimport { EventLog } from '../components/EventLog';\nimport { FixedSizeHolder } from '../components/FixedSizeHolder';\nimport PaddedPage from '../components/PaddedPage';\nimport { createFakeDataAndColumns } from '../data/dataAndColumns';\n\ninterface KeyboardEventsState {\n    eventLog: string;\n}\n\nconst options: Partial<CellDef<string>> = {\n    editor: {\n        serialise: (value: string) => value,\n        deserialise: (text: string, _: string) => text,\n    },\n    getText: (value: string) => value,\n};\nconst { columns, rows: data } = createFakeDataAndColumns(100, 20, (x, y) => `${x},${y}`, options);\n\nexport class KeyboardEventsGrid extends React.Component<{}, KeyboardEventsState> {\n    constructor(props: {}) {\n        super(props);\n        this.state = {\n            eventLog: '',\n        };\n    }\n\n    public render() {\n        return (\n            <PaddedPage>\n                <h1>Keyboard Events</h1>\n                <p>\n                    Keyboard events bubble up, so can be captured the parent element of the grid (when\n                    the grid has focus).\n                </p>\n                <p>\n                    Note that keyboard events will also bubble up when the user interacts with the\n                    inline editor, which you may wish to ignore. To do so, you may wish to observe\n                    the grid's edit events.\n                </p>\n                <p>\n                    Also note that the editing functionality provided in this example is incomplete;\n                    changes are not persisted. To see a more complete example, see\n                    the <Link to=\"/editable\">Editable Data</Link> example.\n                </p>\n                <FixedSizeHolder>\n                    <div onKeyUp={this.onKeyUp} style={{ height: '100%' }}>\n                        <ReactCanvasGrid<string>\n                            columns={columns}\n                            data={data}\n                            rowHeight={20}\n                        />\n                    </div>\n                </FixedSizeHolder>\n                <EventLog log={this.state.eventLog} />\n            </PaddedPage>\n        );\n    }\n\n    private onKeyUp = (event: React.KeyboardEvent<HTMLDivElement>) => {\n        this.setState({\n            eventLog: this.state.eventLog + `key up: ${event.key}\\n`,\n        });\n    }\n}\n","import * as React from 'react';\nimport { ReactCanvasGrid, SelectRange } from 'react-canvas-grid';\nimport { EventLog } from '../components/EventLog';\nimport { FixedSizeHolder } from '../components/FixedSizeHolder';\nimport PaddedPage from '../components/PaddedPage';\nimport { createFakeDataAndColumns } from '../data/dataAndColumns';\n\ninterface SelectionEventsState {\n    eventLog: string;\n}\n\nconst { columns, rows: data } = createFakeDataAndColumns(100, 20, () => {/* no op */});\n\nexport class SelectionEventsGrid extends React.Component<{}, SelectionEventsState> {\n    constructor(props: {}) {\n        super(props);\n        this.state = {\n            eventLog: '',\n        };\n    }\n\n    public render() {\n        return (\n            <PaddedPage>\n                <h1>Selection Events</h1>\n                <p>\n                    The three callbacks <code>onSelectionChange[Start|Update|End]</code> allow consumers\n                    of react-canvas-grid to take action in response to the user changing the selected area.\n                    This can be useful for keeping track of the selection, in order to act upon the data.\n                </p>\n                <p>\n                    Note that clicking / dragging on frozen headers allows the user to select entire rows / columns.\n                </p>\n                <FixedSizeHolder>\n                    <ReactCanvasGrid<void>\n                        columns={columns}\n                        data={data}\n                        rowHeight={20}\n                        frozenRows={1}\n                        frozenCols={1}\n                        onSelectionChangeStart={this.start}\n                        onSelectionChangeUpdate={this.update}\n                        onSelectionChangeEnd={this.end}\n                    />\n                </FixedSizeHolder>\n                <EventLog log={this.state.eventLog} />\n            </PaddedPage>\n        );\n    }\n\n    private start = (range: SelectRange | null) => {\n        this.appendToLog('start', range);\n    }\n\n    private update = (range: SelectRange | null) => {\n        this.appendToLog('update', range);\n    }\n\n    private end = (range: SelectRange | null) => {\n        this.appendToLog('end', range);\n    }\n\n    private appendToLog = (eventType: 'start' | 'update' | 'end', range: SelectRange | null) => {\n        const paddedType = eventType === 'start' ?  ' start' :\n                           eventType === 'update' ? 'update' :\n                                                    '   end';\n        const newRange = range ?\n            `(${range.topLeft.x},${range.topLeft.y}) -> (${range.bottomRight.x},${range.bottomRight.y})` :\n            'none';\n        this.setState((prevState) => {\n            return { ...prevState, eventLog: prevState.eventLog + `${paddedType}: ${newRange}\\n` };\n        });\n    }\n}\n","import * as React from 'react';\nimport { AutofillableGrid } from './Autofill';\nimport { CustomBackgroundGrid } from './CustomBackground';\nimport { CustomTextGrid } from './CustomText';\nimport { DynamicDataGrid } from './DynamicData';\nimport { EditableDataGrid } from './Editable';\nimport { EditEventsGrid } from './EditEvents';\nimport { Everything } from './Everything';\nimport { FocusColumnGrid } from './FocusColumn';\nimport { FrozenCellsGrid } from './FrozenCells';\nimport { KeyboardEventsGrid } from './KeyboardEvents';\nimport { SelectionEventsGrid } from './SelectionEvents';\nimport { SimpleGrid } from './Simple';\nimport { SmallGrid } from './SmallGrid';\n\ninterface ExampleMeta {\n    pathFragment: string;\n    name: string;\n    description: React.ReactNode;\n    component: React.ComponentType<any>;\n}\n\nconst exampleMeta: ExampleMeta[] = [\n    {\n        pathFragment: '/full-example',\n        name: 'Full Example',\n        description: 'A kitchen-sink example, with as many features demonstrated at once as possible.',\n        component: Everything,\n    },\n    {\n        pathFragment: '/small',\n        name: 'Small Grid',\n        description: 'A basic grid setup with minimal data.',\n        component: SmallGrid,\n    },\n    {\n        pathFragment: '/simple',\n        name: 'Simple Grid',\n        description: 'A basic grid setup with enough data to need to scroll',\n        component: SimpleGrid,\n    },\n    {\n        pathFragment: '/editable',\n        name: 'Editable Data',\n        description: 'A grid with cells backed by data, made editable through a text box',\n        component: EditableDataGrid,\n    },\n    {\n        pathFragment: '/frozen',\n        name: 'Frozen Rows & Columns',\n        description: 'A grid with rows and columns that do not scroll',\n        component: FrozenCellsGrid,\n    },\n    {\n        pathFragment: '/focused-column',\n        name: 'Column Focusing',\n        description: 'Automatically scroll to a selected column',\n        component: FocusColumnGrid,\n    },\n    {\n        pathFragment: '/dynamic-data',\n        name: 'Dynamic Data',\n        description: 'Update the columns and rows provided to the grid component',\n        component: DynamicDataGrid,\n    },\n    {\n        pathFragment: '/custom-bg',\n        name: 'Custom Background Renderer',\n        description: 'Draw cells with custom backgrounds',\n        component: CustomBackgroundGrid,\n    },\n    {\n        pathFragment: '/custom-text',\n        name: 'Custom Text Renderer',\n        description: 'Draw cells with custom text',\n        component: CustomTextGrid,\n    },\n    {\n        pathFragment: '/selection-events',\n        name: 'Selection Events',\n        description: 'Respond to users changing the selected area',\n        component: SelectionEventsGrid,\n    },\n    {\n        pathFragment: '/keyboard-events',\n        name: 'Keyboard Events',\n        description: 'Respond to use of the keyboard when the grid is focused',\n        component: KeyboardEventsGrid,\n    },\n    {\n        pathFragment: '/edit-events',\n        name: 'Edit Events',\n        description: 'Respond to users changing the grid\\'s data',\n        component: EditEventsGrid,\n    },\n    {\n        pathFragment: '/autofill',\n        name: 'Autofill',\n        description: 'Autofill',\n        component: AutofillableGrid,\n    },\n];\n\nexport default exampleMeta;\n","import * as React from 'react';\nimport { ReactCanvasGrid } from 'react-canvas-grid';\nimport PaddedPage from '../components/PaddedPage';\n\nexport const SmallGrid = () => {\n    return (\n        <PaddedPage>\n            <h1>Small Grid</h1>\n            <p>\n                This is a minimal usage of react-canvas-grid: a small, read-only grid of\n                static values.\n            </p>\n            <ReactCanvasGrid<void>\n                cssHeight={'45px'}\n                columns={[ { fieldName: 'field-one', width: 50 }, { fieldName: 'field-two', width: 50 } ]}\n                data={[{\n                    'field-one': { data: undefined, text: '1A' },\n                    'field-two': { data: undefined, text: '1B' },\n                },\n                {\n                    'field-one': { data: undefined, text: '2A' },\n                    'field-two': { data: undefined, text: '2B' },\n                }]}\n                rowHeight={20}\n            />\n        </PaddedPage>\n    );\n};\n","import * as React from 'react';\nimport { ReactCanvasGrid } from 'react-canvas-grid';\nimport { FixedSizeHolder } from '../components/FixedSizeHolder';\nimport PaddedPage from '../components/PaddedPage';\nimport { createFakeDataAndColumns } from '../data/dataAndColumns';\n\nexport const SimpleGrid = () => {\n    const { columns, rows: data } = createFakeDataAndColumns(100, 20, () => {/* no op */});\n\n    return (\n        <PaddedPage>\n            <h1>Simple Grid</h1>\n            <p>\n                This is a basic usage of react-canvas-grid: a read-only grid of static values, held\n                within a <code>div</code> of fixed size.\n            </p>\n            <p>\n                Note that because the <code>cssHeight</code> and <code>cssWidth</code> props of&#160;\n                <code>ReactCanvasGrid</code> default to <code>100%</code>, the grid is constrained\n                to the size of its parent. Since the data in the grid requires a larger area than\n                that, the grid becomes scrollable.\n            </p>\n            <FixedSizeHolder>\n                <ReactCanvasGrid<void>\n                    columns={columns}\n                    data={data}\n                    rowHeight={20}\n                />\n            </FixedSizeHolder>\n        </PaddedPage>\n    );\n};\n","import * as React from 'react';\nimport { ReactCanvasGrid } from 'react-canvas-grid';\nimport { FixedSizeHolder } from '../components/FixedSizeHolder';\nimport PaddedPage from '../components/PaddedPage';\nimport { createFakeDataAndColumns } from '../data/dataAndColumns';\n\nexport const FrozenCellsGrid = () => {\n    const { columns, rows: data } = createFakeDataAndColumns(100, 20, () => {/* no op */});\n\n    return (\n        <PaddedPage>\n            <h1>Frozen Rows &amp; Columns</h1>\n            <p>\n                By setting the <code>frozenRows</code> and <code>frozenCols</code> props, rows\n                and columns of cells can be 'frozen' - i.e. fixed in place, even as the rest of\n                the grid scrolls.\n            </p>\n            <p>\n                This can be useful for creating column or row headers.\n            </p>\n            <FixedSizeHolder>\n                <ReactCanvasGrid<void>\n                    columns={columns}\n                    data={data}\n                    rowHeight={20}\n                    frozenRows={1}\n                    frozenCols={1}\n                />\n            </FixedSizeHolder>\n        </PaddedPage>\n    );\n};\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport exampleMeta from './exampleMeta';\n\nexport const Index = () => {\n    return (\n        <React.Fragment>\n            <h1>Examples</h1>\n            <ul>\n                {exampleMeta.map((meta) => (\n                    <li key={meta.pathFragment}>\n                        <h3><Link to={meta.pathFragment}>{meta.name}</Link></h3>\n                        <p>{meta.description}</p>\n                    </li>\n                ))}\n            </ul>\n        </React.Fragment>\n    );\n};\n","import React, { Component } from 'react';\nimport { HashRouter, NavLink, Route } from 'react-router-dom';\nimport './App.css';\nimport exampleMeta from './examples/exampleMeta';\nimport { Index } from './examples/Index';\n\nclass App extends Component<{}, {}> {\n  public render() {\n    return (\n      <HashRouter>\n        <div className=\"app-container\">\n          <main>\n            <Route exact path=\"/\" component={Index} />\n            {exampleMeta.map((meta) => (\n              <Route key={meta.pathFragment} path={meta.pathFragment} component={meta.component} />\n            ))}\n          </main>\n          <nav>\n            <ul>\n              {exampleMeta.map((meta) => (\n                <li key={meta.pathFragment}>\n                  <NavLink to={meta.pathFragment} activeClassName=\"selected\">{meta.name}</NavLink>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}